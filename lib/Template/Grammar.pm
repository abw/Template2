#============================================================= -*-Perl-*-
#
# Template::Grammar
#
# DESCRIPTION
#   Grammar file for the Template Toolkit language containing token
#   definitions and parser state/rules tables generated by Parse::Yapp.
#
# AUTHOR
#   Andy Wardley   <abw@wardley.org>
#
# COPYRIGHT
#   Copyright (C) 1996-2014 Andy Wardley.  All Rights Reserved.
#   Copyright (C) 1998-2000 Canon Research Centre Europe Ltd.
#
#   This module is free software; you can redistribute it and/or
#   modify it under the same terms as Perl itself.
#
# IMPORTANT NOTE
#   This module is constructed from the parser/Grammar.pm.skel file by
#   running the parser/yc script.  You only need to do this if # you
#   have modified the grammar in the parser/Parser.yp file and need #
#   to-recompile it.  See the README in the 'parser' directory for
#   more information (sub-directory of the Template distribution).
#
#========================================================================

package Template::Grammar;

use strict;
use warnings;

our $VERSION  = 2.26;

my (@RESERVED, %CMPOP, $LEXTABLE, $RULES, $STATES);
my ($factory, $rawstart);


#========================================================================

# Reserved words, comparison and binary operators
#========================================================================

@RESERVED = qw(
	GET CALL SET DEFAULT INSERT INCLUDE PROCESS WRAPPER BLOCK END
	USE PLUGIN FILTER MACRO PERL RAWPERL TO STEP AND OR NOT DIV MOD
	IF UNLESS ELSE ELSIF FOR NEXT WHILE SWITCH CASE META IN
	TRY THROW CATCH FINAL LAST RETURN STOP CLEAR VIEW DEBUG
    );

# for historical reasons, != and == are converted to ne and eq to perform
# stringwise comparison (mainly because it doesn't generate "non-numerical
# comparison" warnings which != and == can) but the others (e.g. < > <= >=)
# are not converted to their stringwise equivalents.  I added 'gt' et al,
# briefly for v2.04d and then took them out again in 2.04e.


%CMPOP = qw(
    != ne
    == eq
    <  <
    >  >
    >= >=
    <= <=
);

#    eq eq  # add these lines to the above to
#    lt lt  # enable the eq, lt and gt operators
#    gt gt

#========================================================================
# Lexer Token Table
#========================================================================

# lookup table used by lexer is initialised with special-cases
$LEXTABLE = {
    'FOREACH' => 'FOR',
    'BREAK'   => 'LAST',
    '&&'      => 'AND',
    '||'      => 'OR',
    '!'       => 'NOT',
    '|'	      => 'FILTER',
    '.'       => 'DOT',
    '_'       => 'CAT',
    '..'      => 'TO',
#    ':'       => 'MACRO',
    '='       => 'ASSIGN',
    '=>'      => 'ASSIGN',
#    '->'      => 'ARROW',
    ','       => 'COMMA',
    '\\'      => 'REF',
    'and'     => 'AND',		# explicitly specified so that qw( and or
    'or'      => 'OR',		# not ) can always be used in lower case,
    'not'     => 'NOT',		# regardless of ANYCASE flag
    'mod'     => 'MOD',
    'div'     => 'DIV',
};

# localise the temporary variables needed to complete lexer table
{
    my @tokens = qw< ( ) [ ] { } ${ $ + / ; : ? >;
    my @cmpop  = keys %CMPOP;
    my @binop  = qw( - * % );              # '+' and '/' above, in @tokens

    # fill lexer table, slice by slice, with reserved words and operators
    @$LEXTABLE{ @RESERVED, @cmpop, @binop, @tokens }
			= ( @RESERVED, ('CMPOP') x @cmpop, ('BINOP') x @binop, @tokens );
}


#========================================================================
# CLASS METHODS
#========================================================================

sub new {
    my $class = shift;
    bless {
		LEXTABLE => $LEXTABLE,
		STATES   => $STATES,
		RULES    => $RULES,
    }, $class;
}

# update method to set package-scoped $factory lexical
sub install_factory {
    my ($self, $new_factory) = @_;
    $factory = $new_factory;
}


#========================================================================
# States
#========================================================================

$STATES = [
	{#State 0
		ACTIONS => {
			'DEFAULT' => 56,
			'PROCESS' => 51,
			'INSERT' => 18,
			'NEXT' => 48,
			"(" => 49,
			'DEBUG' => 45,
			'NUMBER' => 44,
			'IF' => 15,
			'LAST' => 16,
			'IDENT' => 12,
			'NOT' => 11,
			'SET' => 43,
			'FILTER' => 8,
			'RETURN' => 9,
			'WHILE' => 5,
			'VIEW' => 41,
			'LITERAL' => 6,
			'STOP' => 39,
			'META' => 1,
			'TRY' => 2,
			'CALL' => 70,
			'WRAPPER' => 69,
			'UNLESS' => 72,
			'TEXT' => 37,
			'REF' => 71,
			'INCLUDE' => 35,
			'RAWPERL' => 29,
			'THROW' => 28,
			'GET' => 66,
			"\$" => 31,
			"\"" => 67,
			'FOR' => 64,
			'BLOCK' => 26,
			'USE' => 27,
			'SWITCH' => 61,
			";" => -18,
			'MACRO' => 63,
			"[" => 25,
			'CLEAR' => 22,
			'PERL' => 20,
			"{" => 59,
			"\${" => 21
		},
		DEFAULT => -3,
		GOTOS => {
			'try' => 34,
			'atomexpr' => 33,
			'directive' => 73,
			'macro' => 38,
			'template' => 36,
			'loop' => 30,
			'defblock' => 68,
			'chunk' => 32,
			'lterm' => 24,
			'switch' => 23,
			'ident' => 62,
			'perl' => 60,
			'wrapper' => 65,
			'expr' => 58,
			'view' => 19,
			'node' => 53,
			'chunks' => 52,
			'atomdir' => 57,
			'condition' => 55,
			'defblockname' => 54,
			'statement' => 46,
			'item' => 14,
			'term' => 50,
			'setlist' => 47,
			'sterm' => 17,
			'use' => 13,
			'assign' => 10,
			'block' => 4,
			'rawperl' => 3,
			'capture' => 7,
			'anonblock' => 42,
			'filter' => 40
		}
	},
	{#State 1
		ACTIONS => {
			'IDENT' => 75
		},
		GOTOS => {
			'meta' => 74,
			'metadata' => 76
		}
	},
	{#State 2
		ACTIONS => {
			";" => 77
		}
	},
	{#State 3
		DEFAULT => -15
	},
	{#State 4
		DEFAULT => -1
	},
	{#State 5
		ACTIONS => {
			"\$" => 31,
			"\"" => 67,
			'NUMBER' => 44,
			"\${" => 21,
			"{" => 59,
			"(" => 49,
			'LITERAL' => 78,
			"[" => 25,
			'NOT' => 11,
			'REF' => 71,
			'IDENT' => 12
		},
		GOTOS => {
			'expr' => 79,
			'ident' => 80,
			'item' => 14,
			'node' => 53,
			'lterm' => 24,
			'sterm' => 17,
			'term' => 50
		}
	},
	{#State 6
		ACTIONS => {
			'ASSIGN' => 81
		},
		DEFAULT => -114
	},
	{#State 7
		DEFAULT => -11
	},
	{#State 8
		ACTIONS => {
			'LITERAL' => 88,
			'IDENT' => 87,
			"\"" => 89,
			'FILENAME' => 86,
			"\$" => 82,
			"\${" => 21,
			'NUMBER' => 95
		},
		GOTOS => {
			'lvalue' => 93,
			'filepart' => 92,
			'names' => 91,
			'item' => 85,
			'lnameargs' => 90,
			'nameargs' => 83,
			'name' => 94,
			'filename' => 84
		}
	},
	{#State 9
		DEFAULT => -36
	},
	{#State 10
		DEFAULT => -151
	},
	{#State 11
		ACTIONS => {
			'NUMBER' => 44,
			"{" => 59,
			"\${" => 21,
			"\"" => 67,
			"\$" => 31,
			"(" => 49,
			'LITERAL' => 78,
			"[" => 25,
			'NOT' => 11,
			'IDENT' => 12,
			'REF' => 71
		},
		GOTOS => {
			'sterm' => 17,
			'term' => 50,
			'ident' => 80,
			'expr' => 96,
			'item' => 14,
			'lterm' => 24,
			'node' => 53
		}
	},
	{#State 12
		DEFAULT => -132
	},
	{#State 13
		DEFAULT => -13
	},
	{#State 14
		ACTIONS => {
			"(" => 97
		},
		DEFAULT => -130
	},
	{#State 15
		ACTIONS => {
			"{" => 59,
			"\${" => 21,
			'NUMBER' => 44,
			"\$" => 31,
			"\"" => 67,
			'LITERAL' => 78,
			"(" => 49,
			"[" => 25,
			'IDENT' => 12,
			'REF' => 71,
			'NOT' => 11
		},
		GOTOS => {
			'sterm' => 17,
			'term' => 50,
			'item' => 14,
			'expr' => 98,
			'ident' => 80,
			'lterm' => 24,
			'node' => 53
		}
	},
	{#State 16
		DEFAULT => -39
	},
	{#State 17
		DEFAULT => -106
	},
	{#State 18
		ACTIONS => {
			'NUMBER' => 95,
			'FILENAME' => 86,
			"\$" => 102,
			"\"" => 99,
			'IDENT' => 101,
			'LITERAL' => 100
		},
		GOTOS => {
			'nameargs' => 103,
			'filename' => 84,
			'names' => 91,
			'name' => 94,
			'filepart' => 92
		}
	},
	{#State 19
		DEFAULT => -14
	},
	{#State 20
		ACTIONS => {
			";" => 104
		}
	},
	{#State 21
		ACTIONS => {
			"\${" => 21,
			'NUMBER' => 44,
			"\$" => 31,
			"\"" => 67,
			'REF' => 71,
			'IDENT' => 12,
			'LITERAL' => 78
		},
		GOTOS => {
			'node' => 53,
			'item' => 14,
			'ident' => 80,
			'sterm' => 105
		}
	},
	{#State 22
		DEFAULT => -38
	},
	{#State 23
		DEFAULT => -22
	},
	{#State 24
		DEFAULT => -105
	},
	{#State 25
		ACTIONS => {
			'REF' => 71,
			'IDENT' => 12,
			"]" => 106,
			"[" => 25,
			'LITERAL' => 78,
			'NUMBER' => 44,
			"\${" => 21,
			"{" => 59,
			"\"" => 67,
			"\$" => 31
		},
		GOTOS => {
			'sterm' => 108,
			'term' => 110,
			'item' => 14,
			'list' => 107,
			'range' => 109,
			'ident' => 80,
			'lterm' => 24,
			'node' => 53
		}
	},
	{#State 26
		ACTIONS => {
			'LITERAL' => 113,
			'IDENT' => 112,
			'FILENAME' => 86,
			'NUMBER' => 95
		},
		DEFAULT => -89,
		GOTOS => {
			'filename' => 111,
			'blockname' => 116,
			'meta' => 74,
			'filepart' => 92,
			'blockargs' => 114,
			'metadata' => 115
		}
	},
	{#State 27
		ACTIONS => {
			'LITERAL' => 88,
			'IDENT' => 87,
			'FILENAME' => 86,
			"\"" => 89,
			"\$" => 82,
			'NUMBER' => 95,
			"\${" => 21
		},
		GOTOS => {
			'name' => 94,
			'filename' => 84,
			'lvalue' => 93,
			'filepart' => 92,
			'names' => 91,
			'item' => 85,
			'lnameargs' => 117,
			'nameargs' => 83
		}
	},
	{#State 28
		ACTIONS => {
			'NUMBER' => 95,
			"\"" => 99,
			'FILENAME' => 86,
			"\$" => 102,
			'IDENT' => 101,
			'LITERAL' => 100
		},
		GOTOS => {
			'name' => 94,
			'filepart' => 92,
			'names' => 91,
			'filename' => 84,
			'nameargs' => 118
		}
	},
	{#State 29
		DEFAULT => -80,
		GOTOS => {
			'@5-1' => 119
		}
	},
	{#State 30
		DEFAULT => -23
	},
	{#State 31
		ACTIONS => {
			'IDENT' => 120
		}
	},
	{#State 32
		DEFAULT => -5
	},
	{#State 33
		ACTIONS => {
			'FILTER' => 126,
			'IF' => 124,
			'WHILE' => 125,
			'FOR' => 123,
			'WRAPPER' => 121,
			'UNLESS' => 122
		}
	},
	{#State 34
		DEFAULT => -24
	},
	{#State 35
		ACTIONS => {
			'LITERAL' => 100,
			'IDENT' => 101,
			"\"" => 99,
			'FILENAME' => 86,
			"\$" => 102,
			'NUMBER' => 95
		},
		GOTOS => {
			'nameargs' => 127,
			'filename' => 84,
			'names' => 91,
			'name' => 94,
			'filepart' => 92
		}
	},
	{#State 36
		ACTIONS => {
			'' => 128
		}
	},
	{#State 37
		DEFAULT => -6
	},
	{#State 38
		DEFAULT => -12
	},
	{#State 39
		DEFAULT => -37
	},
	{#State 40
		DEFAULT => -43
	},
	{#State 41
		ACTIONS => {
			'FILENAME' => 86,
			"\"" => 99,
			"\$" => 102,
			'NUMBER' => 95,
			'LITERAL' => 100,
			'IDENT' => 101
		},
		GOTOS => {
			'name' => 94,
			'filepart' => 92,
			'filename' => 84,
			'names' => 91,
			'nameargs' => 129
		}
	},
	{#State 42
		DEFAULT => -10
	},
	{#State 43
		ACTIONS => {
			'IDENT' => 12,
			'LITERAL' => 130,
			"\${" => 21,
			"\$" => 31
		},
		GOTOS => {
			'assign' => 10,
			'setlist' => 131,
			'node' => 53,
			'item' => 14,
			'ident' => 132
		}
	},
	{#State 44
		DEFAULT => -115
	},
	{#State 45
		ACTIONS => {
			"\$" => 102,
			"\"" => 99,
			'FILENAME' => 86,
			'NUMBER' => 95,
			'LITERAL' => 100,
			'IDENT' => 101
		},
		GOTOS => {
			'nameargs' => 133,
			'name' => 94,
			'filepart' => 92,
			'filename' => 84,
			'names' => 91
		}
	},
	{#State 46
		ACTIONS => {
			";" => 134
		}
	},
	{#State 47
		ACTIONS => {
			'IDENT' => 12,
			'LITERAL' => 130,
			'COMMA' => 135,
			"\${" => 21,
			"\$" => 31
		},
		DEFAULT => -19,
		GOTOS => {
			'item' => 14,
			'ident' => 132,
			'node' => 53,
			'assign' => 136
		}
	},
	{#State 48
		DEFAULT => -40
	},
	{#State 49
		ACTIONS => {
			"[" => 25,
			'IDENT' => 12,
			'REF' => 71,
			'NOT' => 11,
			"\"" => 67,
			"\$" => 31,
			"\${" => 21,
			"{" => 59,
			'NUMBER' => 44,
			'LITERAL' => 6,
			"(" => 49
		},
		GOTOS => {
			'term' => 50,
			'sterm' => 17,
			'item' => 14,
			'expr' => 137,
			'assign' => 139,
			'lterm' => 24,
			'node' => 53,
			'ident' => 138
		}
	},
	{#State 50
		DEFAULT => -148
	},
	{#State 51
		ACTIONS => {
			"\"" => 99,
			'FILENAME' => 86,
			"\$" => 102,
			'NUMBER' => 95,
			'LITERAL' => 100,
			'IDENT' => 101
		},
		GOTOS => {
			'filepart' => 92,
			'name' => 94,
			'filename' => 84,
			'names' => 91,
			'nameargs' => 140
		}
	},
	{#State 52
		ACTIONS => {
			'SWITCH' => 61,
			";" => -18,
			"[" => 25,
			'MACRO' => 63,
			'FOR' => 64,
			'BLOCK' => 26,
			'USE' => 27,
			'PERL' => 20,
			"{" => 59,
			"\${" => 21,
			'CLEAR' => 22,
			'INCLUDE' => 35,
			'CALL' => 70,
			'WRAPPER' => 69,
			'REF' => 71,
			'TEXT' => 37,
			'UNLESS' => 72,
			'RAWPERL' => 29,
			'THROW' => 28,
			'GET' => 66,
			"\$" => 31,
			"\"" => 67,
			'FILTER' => 8,
			'RETURN' => 9,
			'IDENT' => 12,
			'NOT' => 11,
			'SET' => 43,
			'STOP' => 39,
			'META' => 1,
			'TRY' => 2,
			'WHILE' => 5,
			'VIEW' => 41,
			'LITERAL' => 6,
			'PROCESS' => 51,
			'INSERT' => 18,
			'DEFAULT' => 56,
			'DEBUG' => 45,
			'NUMBER' => 44,
			'IF' => 15,
			'LAST' => 16,
			'NEXT' => 48,
			"(" => 49
		},
		DEFAULT => -2,
		GOTOS => {
			'defblockname' => 54,
			'condition' => 55,
			'macro' => 38,
			'atomdir' => 57,
			'directive' => 73,
			'node' => 53,
			'atomexpr' => 33,
			'view' => 19,
			'try' => 34,
			'sterm' => 17,
			'setlist' => 47,
			'defblock' => 68,
			'chunk' => 141,
			'term' => 50,
			'item' => 14,
			'loop' => 30,
			'statement' => 46,
			'assign' => 10,
			'wrapper' => 65,
			'use' => 13,
			'perl' => 60,
			'ident' => 62,
			'switch' => 23,
			'lterm' => 24,
			'filter' => 40,
			'anonblock' => 42,
			'capture' => 7,
			'expr' => 58,
			'rawperl' => 3
		}
	},
	{#State 53
		DEFAULT => -129
	},
	{#State 54
		ACTIONS => {
			'IDENT' => 75
		},
		DEFAULT => -89,
		GOTOS => {
			'blockargs' => 142,
			'metadata' => 115,
			'meta' => 74
		}
	},
	{#State 55
		DEFAULT => -21
	},
	{#State 56
		ACTIONS => {
			"\$" => 31,
			"\${" => 21,
			'LITERAL' => 130,
			'IDENT' => 12
		},
		GOTOS => {
			'setlist' => 143,
			'assign' => 10,
			'ident' => 132,
			'item' => 14,
			'node' => 53
		}
	},
	{#State 57
		ACTIONS => {
			";" => -20
		},
		DEFAULT => -27
	},
	{#State 58
		ACTIONS => {
			'CAT' => 151,
			'DIV' => 146,
			"/" => 147,
			'MOD' => 149,
			'AND' => 150,
			"+" => 148,
			'CMPOP' => 145,
			'OR' => 144,
			"?" => 153,
			";" => -16,
			'BINOP' => 152
		},
		DEFAULT => -26
	},
	{#State 59
		ACTIONS => {
			'IDENT' => 12,
			'LITERAL' => 155,
			"\${" => 21,
			"\$" => 31
		},
		DEFAULT => -121,
		GOTOS => {
			'param' => 157,
			'hash' => 156,
			'item' => 154,
			'params' => 158
		}
	},
	{#State 60
		DEFAULT => -25
	},
	{#State 61
		ACTIONS => {
			"\$" => 31,
			"\"" => 67,
			'NUMBER' => 44,
			"\${" => 21,
			"{" => 59,
			"(" => 49,
			'LITERAL' => 78,
			"[" => 25,
			'IDENT' => 12,
			'REF' => 71,
			'NOT' => 11
		},
		GOTOS => {
			'lterm' => 24,
			'node' => 53,
			'item' => 14,
			'expr' => 159,
			'ident' => 80,
			'term' => 50,
			'sterm' => 17
		}
	},
	{#State 62
		ACTIONS => {
			'DOT' => 161,
			'ASSIGN' => 160
		},
		DEFAULT => -111
	},
	{#State 63
		ACTIONS => {
			'IDENT' => 162
		}
	},
	{#State 64
		ACTIONS => {
			"\${" => 21,
			"{" => 59,
			'NUMBER' => 44,
			"\$" => 31,
			"\"" => 67,
			'LITERAL' => 78,
			"[" => 25,
			'REF' => 71,
			'IDENT' => 163
		},
		GOTOS => {
			'loopvar' => 164,
			'term' => 165,
			'sterm' => 17,
			'lterm' => 24,
			'node' => 53,
			'ident' => 80,
			'item' => 14
		}
	},
	{#State 65
		DEFAULT => -42
	},
	{#State 66
		ACTIONS => {
			'NOT' => 11,
			'IDENT' => 12,
			'REF' => 71,
			"[" => 25,
			'LITERAL' => 78,
			"(" => 49,
			"\$" => 31,
			"\"" => 67,
			"\${" => 21,
			"{" => 59,
			'NUMBER' => 44
		},
		GOTOS => {
			'sterm' => 17,
			'term' => 50,
			'item' => 14,
			'expr' => 166,
			'ident' => 80,
			'node' => 53,
			'lterm' => 24
		}
	},
	{#State 67
		DEFAULT => -178,
		GOTOS => {
			'quoted' => 167
		}
	},
	{#State 68
		DEFAULT => -9
	},
	{#State 69
		ACTIONS => {
			'LITERAL' => 100,
			'IDENT' => 101,
			"\"" => 99,
			"\$" => 102,
			'FILENAME' => 86,
			'NUMBER' => 95
		},
		GOTOS => {
			'names' => 91,
			'filename' => 84,
			'filepart' => 92,
			'name' => 94,
			'nameargs' => 168
		}
	},
	{#State 70
		ACTIONS => {
			"[" => 25,
			'REF' => 71,
			'IDENT' => 12,
			'NOT' => 11,
			"\${" => 21,
			"{" => 59,
			'NUMBER' => 44,
			"\"" => 67,
			"\$" => 31,
			'LITERAL' => 78,
			"(" => 49
		},
		GOTOS => {
			'term' => 50,
			'sterm' => 17,
			'lterm' => 24,
			'node' => 53,
			'ident' => 80,
			'expr' => 169,
			'item' => 14
		}
	},
	{#State 71
		ACTIONS => {
			'IDENT' => 12,
			"\${" => 21,
			"\$" => 31
		},
		GOTOS => {
			'ident' => 170,
			'item' => 14,
			'node' => 53
		}
	},
	{#State 72
		ACTIONS => {
			"[" => 25,
			'REF' => 71,
			'NOT' => 11,
			'IDENT' => 12,
			'NUMBER' => 44,
			"{" => 59,
			"\${" => 21,
			"\$" => 31,
			"\"" => 67,
			"(" => 49,
			'LITERAL' => 78
		},
		GOTOS => {
			'expr' => 171,
			'ident' => 80,
			'item' => 14,
			'node' => 53,
			'lterm' => 24,
			'sterm' => 17,
			'term' => 50
		}
	},
	{#State 73
		DEFAULT => -8
	},
	{#State 74
		DEFAULT => -101
	},
	{#State 75
		ACTIONS => {
			'ASSIGN' => 172
		}
	},
	{#State 76
		ACTIONS => {
			'IDENT' => 75,
			'COMMA' => 173
		},
		DEFAULT => -17,
		GOTOS => {
			'meta' => 174
		}
	},
	{#State 77
		ACTIONS => {
			'CALL' => 70,
			'WRAPPER' => 69,
			'REF' => 71,
			'UNLESS' => 72,
			'TEXT' => 37,
			'INCLUDE' => 35,
			'RAWPERL' => 29,
			'THROW' => 28,
			'GET' => 66,
			"\$" => 31,
			"\"" => 67,
			'FOR' => 64,
			'BLOCK' => 26,
			'USE' => 27,
			'SWITCH' => 61,
			";" => -18,
			'MACRO' => 63,
			"[" => 25,
			'CLEAR' => 22,
			'PERL' => 20,
			"\${" => 21,
			"{" => 59,
			'DEFAULT' => 56,
			'INSERT' => 18,
			'PROCESS' => 51,
			'NEXT' => 48,
			"(" => 49,
			'DEBUG' => 45,
			'NUMBER' => 44,
			'IF' => 15,
			'LAST' => 16,
			'IDENT' => 12,
			'NOT' => 11,
			'SET' => 43,
			'FILTER' => 8,
			'RETURN' => 9,
			'WHILE' => 5,
			'VIEW' => 41,
			'LITERAL' => 6,
			'STOP' => 39,
			'META' => 1,
			'TRY' => 2
		},
		DEFAULT => -3,
		GOTOS => {
			'use' => 13,
			'assign' => 10,
			'wrapper' => 65,
			'switch' => 23,
			'lterm' => 24,
			'ident' => 62,
			'perl' => 60,
			'capture' => 7,
			'anonblock' => 42,
			'filter' => 40,
			'block' => 175,
			'rawperl' => 3,
			'expr' => 58,
			'atomdir' => 57,
			'directive' => 73,
			'macro' => 38,
			'condition' => 55,
			'defblockname' => 54,
			'try' => 34,
			'view' => 19,
			'atomexpr' => 33,
			'node' => 53,
			'chunks' => 52,
			'term' => 50,
			'chunk' => 32,
			'defblock' => 68,
			'sterm' => 17,
			'setlist' => 47,
			'statement' => 46,
			'loop' => 30,
			'item' => 14
		}
	},
	{#State 78
		DEFAULT => -114
	},
	{#State 79
		ACTIONS => {
			'DIV' => 146,
			'CAT' => 151,
			"/" => 147,
			"?" => 153,
			'OR' => 144,
			'MOD' => 149,
			";" => 176,
			'AND' => 150,
			"+" => 148,
			'CMPOP' => 145,
			'BINOP' => 152
		}
	},
	{#State 80
		ACTIONS => {
			'DOT' => 161
		},
		DEFAULT => -111
	},
	{#State 81
		ACTIONS => {
			'LITERAL' => 78,
			"(" => 49,
			"\${" => 21,
			"{" => 59,
			'NUMBER' => 44,
			"\$" => 31,
			"\"" => 67,
			'IDENT' => 12,
			'NOT' => 11,
			'REF' => 71,
			"[" => 25
		},
		GOTOS => {
			'term' => 50,
			'sterm' => 17,
			'node' => 53,
			'lterm' => 24,
			'item' => 14,
			'expr' => 177,
			'ident' => 80
		}
	},
	{#State 82
		ACTIONS => {
			"\${" => 21,
			"\$" => 31,
			'IDENT' => 178
		},
		GOTOS => {
			'ident' => 179,
			'item' => 14,
			'node' => 53
		}
	},
	{#State 83
		DEFAULT => -160
	},
	{#State 84
		ACTIONS => {
			'DOT' => 180
		},
		DEFAULT => -170
	},
	{#State 85
		DEFAULT => -161
	},
	{#State 86
		DEFAULT => -174
	},
	{#State 87
		ACTIONS => {
			'ASSIGN' => -132
		},
		DEFAULT => -175
	},
	{#State 88
		ACTIONS => {
			'ASSIGN' => -163
		},
		DEFAULT => -171
	},
	{#State 89
		DEFAULT => -178,
		GOTOS => {
			'quoted' => 181
		}
	},
	{#State 90
		ACTIONS => {
			";" => 182
		}
	},
	{#State 91
		ACTIONS => {
			"(" => 185,
			"+" => 184
		},
		DEFAULT => -158,
		GOTOS => {
			'args' => 183
		}
	},
	{#State 92
		DEFAULT => -173
	},
	{#State 93
		ACTIONS => {
			'ASSIGN' => 186
		}
	},
	{#State 94
		DEFAULT => -168
	},
	{#State 95
		DEFAULT => -176
	},
	{#State 96
		ACTIONS => {
			"+" => 148,
			'BINOP' => 152,
			'CMPOP' => 145,
			'MOD' => 149,
			'CAT' => 151,
			'DIV' => 146,
			"/" => 147
		},
		DEFAULT => -144
	},
	{#State 97
		DEFAULT => -158,
		GOTOS => {
			'args' => 187
		}
	},
	{#State 98
		ACTIONS => {
			'CMPOP' => 145,
			'BINOP' => 152,
			"?" => 153,
			'MOD' => 149,
			'OR' => 144,
			"+" => 148,
			";" => 188,
			'AND' => 150,
			'DIV' => 146,
			'CAT' => 151,
			"/" => 147
		}
	},
	{#State 99
		DEFAULT => -178,
		GOTOS => {
			'quoted' => 189
		}
	},
	{#State 100
		DEFAULT => -171
	},
	{#State 101
		DEFAULT => -175
	},
	{#State 102
		ACTIONS => {
			"\${" => 21,
			"\$" => 31,
			'IDENT' => 12
		},
		GOTOS => {
			'node' => 53,
			'item' => 14,
			'ident' => 179
		}
	},
	{#State 103
		DEFAULT => -32
	},
	{#State 104
		DEFAULT => -78,
		GOTOS => {
			'@4-2' => 190
		}
	},
	{#State 105
		ACTIONS => {
			"}" => 191
		}
	},
	{#State 106
		DEFAULT => -109
	},
	{#State 107
		ACTIONS => {
			'NUMBER' => 44,
			"\${" => 21,
			"{" => 59,
			"\"" => 67,
			"\$" => 31,
			'COMMA' => 193,
			'LITERAL' => 78,
			"]" => 194,
			"[" => 25,
			'REF' => 71,
			'IDENT' => 12
		},
		GOTOS => {
			'node' => 53,
			'lterm' => 24,
			'ident' => 80,
			'item' => 14,
			'term' => 192,
			'sterm' => 17
		}
	},
	{#State 108
		ACTIONS => {
			'TO' => 195
		},
		DEFAULT => -106
	},
	{#State 109
		ACTIONS => {
			"]" => 196
		}
	},
	{#State 110
		DEFAULT => -118
	},
	{#State 111
		ACTIONS => {
			'DOT' => 180
		},
		DEFAULT => -86
	},
	{#State 112
		ACTIONS => {
			'ASSIGN' => 172
		},
		DEFAULT => -175
	},
	{#State 113
		DEFAULT => -87
	},
	{#State 114
		ACTIONS => {
			";" => 197
		}
	},
	{#State 115
		ACTIONS => {
			'COMMA' => 173,
			'IDENT' => 75
		},
		DEFAULT => -88,
		GOTOS => {
			'meta' => 174
		}
	},
	{#State 116
		DEFAULT => -85
	},
	{#State 117
		DEFAULT => -75
	},
	{#State 118
		DEFAULT => -35
	},
	{#State 119
		ACTIONS => {
			";" => 198
		}
	},
	{#State 120
		DEFAULT => -134
	},
	{#State 121
		ACTIONS => {
			'IDENT' => 101,
			'LITERAL' => 100,
			'NUMBER' => 95,
			"\$" => 102,
			"\"" => 99,
			'FILENAME' => 86
		},
		GOTOS => {
			'name' => 94,
			'filepart' => 92,
			'filename' => 84,
			'names' => 91,
			'nameargs' => 199
		}
	},
	{#State 122
		ACTIONS => {
			"\$" => 31,
			"\"" => 67,
			'NUMBER' => 44,
			"\${" => 21,
			"{" => 59,
			"(" => 49,
			'LITERAL' => 78,
			"[" => 25,
			'REF' => 71,
			'NOT' => 11,
			'IDENT' => 12
		},
		GOTOS => {
			'item' => 14,
			'expr' => 200,
			'ident' => 80,
			'node' => 53,
			'lterm' => 24,
			'sterm' => 17,
			'term' => 50
		}
	},
	{#State 123
		ACTIONS => {
			'REF' => 71,
			'IDENT' => 163,
			"[" => 25,
			'LITERAL' => 78,
			"{" => 59,
			"\${" => 21,
			'NUMBER' => 44,
			"\"" => 67,
			"\$" => 31
		},
		GOTOS => {
			'term' => 165,
			'loopvar' => 201,
			'sterm' => 17,
			'lterm' => 24,
			'node' => 53,
			'item' => 14,
			'ident' => 80
		}
	},
	{#State 124
		ACTIONS => {
			"[" => 25,
			'IDENT' => 12,
			'NOT' => 11,
			'REF' => 71,
			"{" => 59,
			"\${" => 21,
			'NUMBER' => 44,
			"\"" => 67,
			"\$" => 31,
			'LITERAL' => 78,
			"(" => 49
		},
		GOTOS => {
			'sterm' => 17,
			'term' => 50,
			'item' => 14,
			'expr' => 202,
			'ident' => 80,
			'node' => 53,
			'lterm' => 24
		}
	},
	{#State 125
		ACTIONS => {
			"[" => 25,
			'IDENT' => 12,
			'REF' => 71,
			'NOT' => 11,
			"\"" => 67,
			"\$" => 31,
			'NUMBER' => 44,
			"\${" => 21,
			"{" => 59,
			"(" => 49,
			'LITERAL' => 78
		},
		GOTOS => {
			'term' => 50,
			'sterm' => 17,
			'node' => 53,
			'lterm' => 24,
			'item' => 14,
			'ident' => 80,
			'expr' => 203
		}
	},
	{#State 126
		ACTIONS => {
			"\$" => 82,
			"\"" => 89,
			'FILENAME' => 86,
			"\${" => 21,
			'NUMBER' => 95,
			'LITERAL' => 88,
			'IDENT' => 87
		},
		GOTOS => {
			'nameargs' => 83,
			'lnameargs' => 204,
			'item' => 85,
			'names' => 91,
			'filepart' => 92,
			'lvalue' => 93,
			'filename' => 84,
			'name' => 94
		}
	},
	{#State 127
		DEFAULT => -33
	},
	{#State 128
		DEFAULT => 0
	},
	{#State 129
		ACTIONS => {
			";" => 205
		}
	},
	{#State 130
		ACTIONS => {
			'ASSIGN' => 81
		}
	},
	{#State 131
		ACTIONS => {
			'COMMA' => 135,
			'LITERAL' => 130,
			"\${" => 21,
			"\$" => 31,
			'IDENT' => 12
		},
		DEFAULT => -30,
		GOTOS => {
			'assign' => 136,
			'ident' => 132,
			'item' => 14,
			'node' => 53
		}
	},
	{#State 132
		ACTIONS => {
			'DOT' => 161,
			'ASSIGN' => 206
		}
	},
	{#State 133
		DEFAULT => -41
	},
	{#State 134
		DEFAULT => -7
	},
	{#State 135
		DEFAULT => -150
	},
	{#State 136
		DEFAULT => -149
	},
	{#State 137
		ACTIONS => {
			'BINOP' => 152,
			'CMPOP' => 145,
			"+" => 148,
			'AND' => 150,
			'OR' => 144,
			'MOD' => 149,
			"?" => 153,
			"/" => 147,
			")" => 207,
			'DIV' => 146,
			'CAT' => 151
		}
	},
	{#State 138
		ACTIONS => {
			'DOT' => 161,
			'ASSIGN' => 206
		},
		DEFAULT => -111
	},
	{#State 139
		ACTIONS => {
			")" => 208
		}
	},
	{#State 140
		DEFAULT => -34
	},
	{#State 141
		DEFAULT => -4
	},
	{#State 142
		ACTIONS => {
			";" => 209
		}
	},
	{#State 143
		ACTIONS => {
			"\${" => 21,
			"\$" => 31,
			'LITERAL' => 130,
			'COMMA' => 135,
			'IDENT' => 12
		},
		DEFAULT => -31,
		GOTOS => {
			'item' => 14,
			'ident' => 132,
			'node' => 53,
			'assign' => 136
		}
	},
	{#State 144
		ACTIONS => {
			"\$" => 31,
			"\"" => 67,
			"{" => 59,
			"\${" => 21,
			'NUMBER' => 44,
			'LITERAL' => 78,
			"(" => 49,
			"[" => 25,
			'REF' => 71,
			'IDENT' => 12,
			'NOT' => 11
		},
		GOTOS => {
			'ident' => 80,
			'expr' => 210,
			'item' => 14,
			'lterm' => 24,
			'node' => 53,
			'sterm' => 17,
			'term' => 50
		}
	},
	{#State 145
		ACTIONS => {
			"(" => 49,
			'LITERAL' => 78,
			"\"" => 67,
			"\$" => 31,
			'NUMBER' => 44,
			"{" => 59,
			"\${" => 21,
			'IDENT' => 12,
			'REF' => 71,
			'NOT' => 11,
			"[" => 25
		},
		GOTOS => {
			'sterm' => 17,
			'term' => 50,
			'ident' => 80,
			'expr' => 211,
			'item' => 14,
			'lterm' => 24,
			'node' => 53
		}
	},
	{#State 146
		ACTIONS => {
			'IDENT' => 12,
			'REF' => 71,
			'NOT' => 11,
			"[" => 25,
			'LITERAL' => 78,
			"(" => 49,
			"\$" => 31,
			"\"" => 67,
			"{" => 59,
			"\${" => 21,
			'NUMBER' => 44
		},
		GOTOS => {
			'lterm' => 24,
			'node' => 53,
			'item' => 14,
			'ident' => 80,
			'expr' => 212,
			'term' => 50,
			'sterm' => 17
		}
	},
	{#State 147
		ACTIONS => {
			'NOT' => 11,
			'IDENT' => 12,
			'REF' => 71,
			"[" => 25,
			'LITERAL' => 78,
			"(" => 49,
			"\${" => 21,
			"{" => 59,
			'NUMBER' => 44,
			"\$" => 31,
			"\"" => 67
		},
		GOTOS => {
			'term' => 50,
			'sterm' => 17,
			'node' => 53,
			'lterm' => 24,
			'ident' => 80,
			'expr' => 213,
			'item' => 14
		}
	},
	{#State 148
		ACTIONS => {
			"[" => 25,
			'REF' => 71,
			'IDENT' => 12,
			'NOT' => 11,
			"\${" => 21,
			"{" => 59,
			'NUMBER' => 44,
			"\$" => 31,
			"\"" => 67,
			'LITERAL' => 78,
			"(" => 49
		},
		GOTOS => {
			'sterm' => 17,
			'term' => 50,
			'item' => 14,
			'ident' => 80,
			'expr' => 214,
			'node' => 53,
			'lterm' => 24
		}
	},
	{#State 149
		ACTIONS => {
			'LITERAL' => 78,
			"(" => 49,
			"{" => 59,
			"\${" => 21,
			'NUMBER' => 44,
			"\$" => 31,
			"\"" => 67,
			'REF' => 71,
			'IDENT' => 12,
			'NOT' => 11,
			"[" => 25
		},
		GOTOS => {
			'sterm' => 17,
			'term' => 50,
			'item' => 14,
			'ident' => 80,
			'expr' => 215,
			'node' => 53,
			'lterm' => 24
		}
	},
	{#State 150
		ACTIONS => {
			"[" => 25,
			'REF' => 71,
			'NOT' => 11,
			'IDENT' => 12,
			"\$" => 31,
			"\"" => 67,
			'NUMBER' => 44,
			"\${" => 21,
			"{" => 59,
			"(" => 49,
			'LITERAL' => 78
		},
		GOTOS => {
			'sterm' => 17,
			'term' => 50,
			'expr' => 216,
			'ident' => 80,
			'item' => 14,
			'lterm' => 24,
			'node' => 53
		}
	},
	{#State 151
		ACTIONS => {
			"[" => 25,
			'REF' => 71,
			'IDENT' => 12,
			'NOT' => 11,
			'NUMBER' => 44,
			"{" => 59,
			"\${" => 21,
			"\$" => 31,
			"\"" => 67,
			"(" => 49,
			'LITERAL' => 78
		},
		GOTOS => {
			'item' => 14,
			'expr' => 217,
			'ident' => 80,
			'node' => 53,
			'lterm' => 24,
			'sterm' => 17,
			'term' => 50
		}
	},
	{#State 152
		ACTIONS => {
			'REF' => 71,
			'NOT' => 11,
			'IDENT' => 12,
			"[" => 25,
			'LITERAL' => 78,
			"(" => 49,
			"{" => 59,
			"\${" => 21,
			'NUMBER' => 44,
			"\$" => 31,
			"\"" => 67
		},
		GOTOS => {
			'term' => 50,
			'sterm' => 17,
			'node' => 53,
			'lterm' => 24,
			'ident' => 80,
			'expr' => 218,
			'item' => 14
		}
	},
	{#State 153
		ACTIONS => {
			"{" => 59,
			"\${" => 21,
			'NUMBER' => 44,
			"\"" => 67,
			"\$" => 31,
			'LITERAL' => 78,
			"(" => 49,
			"[" => 25,
			'IDENT' => 12,
			'REF' => 71,
			'NOT' => 11
		},
		GOTOS => {
			'node' => 53,
			'lterm' => 24,
			'item' => 14,
			'expr' => 219,
			'ident' => 80,
			'term' => 50,
			'sterm' => 17
		}
	},
	{#State 154
		ACTIONS => {
			'ASSIGN' => 220
		}
	},
	{#State 155
		ACTIONS => {
			'ASSIGN' => 221
		}
	},
	{#State 156
		ACTIONS => {
			"}" => 222
		}
	},
	{#State 157
		DEFAULT => -124
	},
	{#State 158
		ACTIONS => {
			'IDENT' => 12,
			'COMMA' => 223,
			'LITERAL' => 155,
			"\${" => 21,
			"\$" => 31
		},
		DEFAULT => -120,
		GOTOS => {
			'param' => 224,
			'item' => 154
		}
	},
	{#State 159
		ACTIONS => {
			'DIV' => 146,
			'CAT' => 151,
			"/" => 147,
			'MOD' => 149,
			'OR' => 144,
			"?" => 153,
			"+" => 148,
			'AND' => 150,
			";" => 225,
			'CMPOP' => 145,
			'BINOP' => 152
		}
	},
	{#State 160
		ACTIONS => {
			'DEFAULT' => 56,
			'INSERT' => 18,
			'PROCESS' => 51,
			'NEXT' => 48,
			"(" => 49,
			'DEBUG' => 45,
			'NUMBER' => 44,
			'LAST' => 16,
			'IF' => 15,
			'NOT' => 11,
			'IDENT' => 12,
			'SET' => 43,
			'RETURN' => 9,
			'FILTER' => 8,
			'WHILE' => 5,
			'LITERAL' => 6,
			'TRY' => 2,
			'STOP' => 39,
			'REF' => 71,
			'UNLESS' => 72,
			'CALL' => 70,
			'WRAPPER' => 69,
			'INCLUDE' => 35,
			'THROW' => 28,
			"\"" => 67,
			"\$" => 31,
			'GET' => 66,
			'BLOCK' => 227,
			'FOR' => 64,
			'SWITCH' => 61,
			"[" => 25,
			'CLEAR' => 22,
			"\${" => 21,
			"{" => 59,
			'PERL' => 20
		},
		GOTOS => {
			'filter' => 40,
			'expr' => 228,
			'wrapper' => 65,
			'mdir' => 226,
			'assign' => 10,
			'switch' => 23,
			'lterm' => 24,
			'perl' => 60,
			'ident' => 138,
			'term' => 50,
			'sterm' => 17,
			'setlist' => 47,
			'item' => 14,
			'loop' => 30,
			'condition' => 55,
			'directive' => 229,
			'atomdir' => 57,
			'atomexpr' => 33,
			'node' => 53,
			'try' => 34
		}
	},
	{#State 161
		ACTIONS => {
			'IDENT' => 12,
			"\$" => 31,
			'NUMBER' => 230,
			"\${" => 21
		},
		GOTOS => {
			'node' => 231,
			'item' => 14
		}
	},
	{#State 162
		ACTIONS => {
			'CALL' => 70,
			'WRAPPER' => 69,
			'REF' => 71,
			'UNLESS' => 72,
			'INCLUDE' => 35,
			'GET' => 66,
			"\$" => 31,
			"\"" => 67,
			'THROW' => 28,
			'FOR' => 64,
			'BLOCK' => 227,
			"[" => 25,
			'SWITCH' => 61,
			'CLEAR' => 22,
			'PERL' => 20,
			"\${" => 21,
			"{" => 59,
			'DEFAULT' => 56,
			'PROCESS' => 51,
			'INSERT' => 18,
			"(" => 232,
			'NEXT' => 48,
			'IF' => 15,
			'LAST' => 16,
			'NUMBER' => 44,
			'DEBUG' => 45,
			'SET' => 43,
			'IDENT' => 12,
			'NOT' => 11,
			'FILTER' => 8,
			'RETURN' => 9,
			'LITERAL' => 6,
			'WHILE' => 5,
			'STOP' => 39,
			'TRY' => 2
		},
		GOTOS => {
			'switch' => 23,
			'lterm' => 24,
			'ident' => 138,
			'perl' => 60,
			'wrapper' => 65,
			'mdir' => 234,
			'assign' => 10,
			'expr' => 233,
			'filter' => 40,
			'try' => 34,
			'node' => 53,
			'atomexpr' => 33,
			'directive' => 229,
			'atomdir' => 57,
			'condition' => 55,
			'loop' => 30,
			'item' => 14,
			'term' => 50,
			'sterm' => 17,
			'setlist' => 47
		}
	},
	{#State 163
		ACTIONS => {
			'ASSIGN' => 235,
			'IN' => 236
		},
		DEFAULT => -132
	},
	{#State 164
		ACTIONS => {
			";" => 237
		}
	},
	{#State 165
		DEFAULT => -158,
		GOTOS => {
			'args' => 238
		}
	},
	{#State 166
		ACTIONS => {
			'CAT' => 151,
			'DIV' => 146,
			"/" => 147,
			'MOD' => 149,
			"+" => 148,
			'AND' => 150,
			'CMPOP' => 145,
			"?" => 153,
			'OR' => 144,
			'BINOP' => 152
		},
		DEFAULT => -28
	},
	{#State 167
		ACTIONS => {
			'TEXT' => 239,
			'IDENT' => 12,
			"\"" => 242,
			"\$" => 31,
			";" => 240,
			"\${" => 21
		},
		GOTOS => {
			'node' => 53,
			'item' => 14,
			'ident' => 241,
			'quotable' => 243
		}
	},
	{#State 168
		ACTIONS => {
			";" => 244
		}
	},
	{#State 169
		ACTIONS => {
			'OR' => 144,
			"?" => 153,
			'BINOP' => 152,
			'AND' => 150,
			"+" => 148,
			'MOD' => 149,
			"/" => 147,
			'CAT' => 151,
			'DIV' => 146,
			'CMPOP' => 145
		},
		DEFAULT => -29
	},
	{#State 170
		ACTIONS => {
			'DOT' => 161
		},
		DEFAULT => -112
	},
	{#State 171
		ACTIONS => {
			'AND' => 150,
			";" => 245,
			"+" => 148,
			'MOD' => 149,
			'OR' => 144,
			"?" => 153,
			"/" => 147,
			'CAT' => 151,
			'DIV' => 146,
			'BINOP' => 152,
			'CMPOP' => 145
		}
	},
	{#State 172
		ACTIONS => {
			'NUMBER' => 246,
			"\"" => 247,
			'LITERAL' => 248
		}
	},
	{#State 173
		DEFAULT => -100
	},
	{#State 174
		DEFAULT => -99
	},
	{#State 175
		ACTIONS => {
			'CATCH' => 250,
			'FINAL' => 249
		},
		DEFAULT => -74,
		GOTOS => {
			'final' => 251
		}
	},
	{#State 176
		DEFAULT => -59,
		GOTOS => {
			'@2-3' => 252
		}
	},
	{#State 177
		ACTIONS => {
			'OR' => 144,
			"?" => 153,
			'BINOP' => 152,
			'CAT' => 151,
			'DIV' => 146,
			"/" => 147,
			'MOD' => 149,
			"+" => 148,
			'AND' => 150,
			'CMPOP' => 145
		},
		DEFAULT => -153
	},
	{#State 178
		ACTIONS => {
			'ASSIGN' => -134
		},
		DEFAULT => -132
	},
	{#State 179
		ACTIONS => {
			'DOT' => 161
		},
		DEFAULT => -158,
		GOTOS => {
			'args' => 253
		}
	},
	{#State 180
		ACTIONS => {
			'NUMBER' => 95,
			'FILENAME' => 86,
			'IDENT' => 101
		},
		GOTOS => {
			'filepart' => 254
		}
	},
	{#State 181
		ACTIONS => {
			'TEXT' => 239,
			'IDENT' => 12,
			";" => 240,
			"\$" => 31,
			"\"" => 255,
			"\${" => 21
		},
		GOTOS => {
			'node' => 53,
			'ident' => 241,
			'quotable' => 243,
			'item' => 14
		}
	},
	{#State 182
		ACTIONS => {
			'RETURN' => 9,
			'FILTER' => 8,
			'IDENT' => 12,
			'NOT' => 11,
			'SET' => 43,
			'TRY' => 2,
			'META' => 1,
			'STOP' => 39,
			'WHILE' => 5,
			'LITERAL' => 6,
			'VIEW' => 41,
			'INSERT' => 18,
			'PROCESS' => 51,
			'DEFAULT' => 56,
			'DEBUG' => 45,
			'NUMBER' => 44,
			'LAST' => 16,
			'IF' => 15,
			'NEXT' => 48,
			"(" => 49,
			'SWITCH' => 61,
			'MACRO' => 63,
			"[" => 25,
			";" => -18,
			'BLOCK' => 26,
			'FOR' => 64,
			'USE' => 27,
			"{" => 59,
			"\${" => 21,
			'PERL' => 20,
			'CLEAR' => 22,
			'INCLUDE' => 35,
			'REF' => 71,
			'UNLESS' => 72,
			'TEXT' => 37,
			'CALL' => 70,
			'WRAPPER' => 69,
			'THROW' => 28,
			'RAWPERL' => 29,
			"\$" => 31,
			"\"" => 67,
			'GET' => 66
		},
		DEFAULT => -3,
		GOTOS => {
			'node' => 53,
			'atomexpr' => 33,
			'try' => 34,
			'view' => 19,
			'chunks' => 52,
			'macro' => 38,
			'condition' => 55,
			'atomdir' => 57,
			'directive' => 73,
			'defblockname' => 54,
			'statement' => 46,
			'item' => 14,
			'loop' => 30,
			'term' => 50,
			'setlist' => 47,
			'sterm' => 17,
			'defblock' => 68,
			'chunk' => 32,
			'switch' => 23,
			'lterm' => 24,
			'perl' => 60,
			'ident' => 62,
			'use' => 13,
			'assign' => 10,
			'wrapper' => 65,
			'rawperl' => 3,
			'block' => 256,
			'expr' => 58,
			'capture' => 7,
			'anonblock' => 42,
			'filter' => 40
		}
	},
	{#State 183
		ACTIONS => {
			"\${" => 21,
			"{" => 59,
			'COMMA' => 257,
			'LITERAL' => 258,
			"[" => 25,
			'IDENT' => 12,
			'NOT' => 11,
			'NUMBER' => 44,
			"\"" => 67,
			"\$" => 31,
			"(" => 49,
			'REF' => 71
		},
		DEFAULT => -165,
		GOTOS => {
			'sterm' => 17,
			'term' => 50,
			'expr' => 260,
			'item' => 259,
			'ident' => 261,
			'lterm' => 24,
			'param' => 262,
			'node' => 53
		}
	},
	{#State 184
		ACTIONS => {
			'LITERAL' => 100,
			'IDENT' => 101,
			'FILENAME' => 86,
			"\"" => 99,
			'NUMBER' => 95
		},
		GOTOS => {
			'filepart' => 92,
			'name' => 263,
			'filename' => 84
		}
	},
	{#State 185
		DEFAULT => -158,
		GOTOS => {
			'args' => 264
		}
	},
	{#State 186
		ACTIONS => {
			"\$" => 102,
			"\"" => 99,
			'FILENAME' => 86,
			'NUMBER' => 95,
			'LITERAL' => 100,
			'IDENT' => 101
		},
		GOTOS => {
			'nameargs' => 265,
			'names' => 91,
			'filename' => 84,
			'filepart' => 92,
			'name' => 94
		}
	},
	{#State 187
		ACTIONS => {
			")" => 266,
			'REF' => 71,
			'IDENT' => 12,
			'NOT' => 11,
			"[" => 25,
			'LITERAL' => 258,
			"(" => 49,
			'COMMA' => 257,
			"\$" => 31,
			"\"" => 67,
			"\${" => 21,
			"{" => 59,
			'NUMBER' => 44
		},
		GOTOS => {
			'param' => 262,
			'lterm' => 24,
			'node' => 53,
			'ident' => 261,
			'expr' => 260,
			'item' => 259,
			'term' => 50,
			'sterm' => 17
		}
	},
	{#State 188
		ACTIONS => {
			'DEFAULT' => 56,
			'INSERT' => 18,
			'PROCESS' => 51,
			"(" => 49,
			'NEXT' => 48,
			'LAST' => 16,
			'IF' => 15,
			'NUMBER' => 44,
			'DEBUG' => 45,
			'SET' => 43,
			'IDENT' => 12,
			'NOT' => 11,
			'RETURN' => 9,
			'FILTER' => 8,
			'LITERAL' => 6,
			'VIEW' => 41,
			'WHILE' => 5,
			'TRY' => 2,
			'STOP' => 39,
			'META' => 1,
			'TEXT' => 37,
			'REF' => 71,
			'UNLESS' => 72,
			'WRAPPER' => 69,
			'CALL' => 70,
			'INCLUDE' => 35,
			"\$" => 31,
			"\"" => 67,
			'GET' => 66,
			'THROW' => 28,
			'RAWPERL' => 29,
			'USE' => 27,
			'BLOCK' => 26,
			'FOR' => 64,
			'MACRO' => 63,
			"[" => 25,
			";" => -18,
			'SWITCH' => 61,
			'CLEAR' => 22,
			"{" => 59,
			"\${" => 21,
			'PERL' => 20
		},
		DEFAULT => -3,
		GOTOS => {
			'directive' => 73,
			'atomdir' => 57,
			'condition' => 55,
			'macro' => 38,
			'defblockname' => 54,
			'view' => 19,
			'try' => 34,
			'node' => 53,
			'atomexpr' => 33,
			'chunks' => 52,
			'term' => 50,
			'defblock' => 68,
			'chunk' => 32,
			'setlist' => 47,
			'sterm' => 17,
			'statement' => 46,
			'loop' => 30,
			'item' => 14,
			'use' => 13,
			'assign' => 10,
			'wrapper' => 65,
			'switch' => 23,
			'lterm' => 24,
			'ident' => 62,
			'perl' => 60,
			'anonblock' => 42,
			'capture' => 7,
			'filter' => 40,
			'block' => 267,
			'rawperl' => 3,
			'expr' => 58
		}
	},
	{#State 189
		ACTIONS => {
			";" => 240,
			"\"" => 268,
			"\$" => 31,
			"\${" => 21,
			'IDENT' => 12,
			'TEXT' => 239
		},
		GOTOS => {
			'ident' => 241,
			'quotable' => 243,
			'item' => 14,
			'node' => 53
		}
	},
	{#State 190
		ACTIONS => {
			'CALL' => 70,
			'WRAPPER' => 69,
			'TEXT' => 37,
			'UNLESS' => 72,
			'REF' => 71,
			'INCLUDE' => 35,
			'RAWPERL' => 29,
			'THROW' => 28,
			'GET' => 66,
			"\"" => 67,
			"\$" => 31,
			'FOR' => 64,
			'BLOCK' => 26,
			'USE' => 27,
			'SWITCH' => 61,
			";" => -18,
			"[" => 25,
			'MACRO' => 63,
			'CLEAR' => 22,
			'PERL' => 20,
			"\${" => 21,
			"{" => 59,
			'DEFAULT' => 56,
			'PROCESS' => 51,
			'INSERT' => 18,
			'NEXT' => 48,
			"(" => 49,
			'DEBUG' => 45,
			'NUMBER' => 44,
			'IF' => 15,
			'LAST' => 16,
			'IDENT' => 12,
			'NOT' => 11,
			'SET' => 43,
			'FILTER' => 8,
			'RETURN' => 9,
			'WHILE' => 5,
			'VIEW' => 41,
			'LITERAL' => 6,
			'META' => 1,
			'STOP' => 39,
			'TRY' => 2
		},
		DEFAULT => -3,
		GOTOS => {
			'defblockname' => 54,
			'directive' => 73,
			'atomdir' => 57,
			'macro' => 38,
			'condition' => 55,
			'chunks' => 52,
			'try' => 34,
			'view' => 19,
			'atomexpr' => 33,
			'node' => 53,
			'chunk' => 32,
			'defblock' => 68,
			'setlist' => 47,
			'sterm' => 17,
			'term' => 50,
			'loop' => 30,
			'item' => 14,
			'statement' => 46,
			'assign' => 10,
			'wrapper' => 65,
			'use' => 13,
			'ident' => 62,
			'perl' => 60,
			'lterm' => 24,
			'switch' => 23,
			'filter' => 40,
			'anonblock' => 42,
			'capture' => 7,
			'expr' => 58,
			'block' => 269,
			'rawperl' => 3
		}
	},
	{#State 191
		DEFAULT => -133
	},
	{#State 192
		DEFAULT => -116
	},
	{#State 193
		DEFAULT => -117
	},
	{#State 194
		DEFAULT => -107
	},
	{#State 195
		ACTIONS => {
			"\"" => 67,
			"\$" => 31,
			"\${" => 21,
			'NUMBER' => 44,
			'LITERAL' => 78,
			'REF' => 71,
			'IDENT' => 12
		},
		GOTOS => {
			'node' => 53,
			'ident' => 80,
			'item' => 14,
			'sterm' => 270
		}
	},
	{#State 196
		DEFAULT => -108
	},
	{#State 197
		ACTIONS => {
			";" => -18,
			"[" => 25,
			'MACRO' => 63,
			'SWITCH' => 61,
			'USE' => 27,
			'FOR' => 64,
			'BLOCK' => 26,
			'PERL' => 20,
			"\${" => 21,
			"{" => 59,
			'CLEAR' => 22,
			'INCLUDE' => 35,
			'CALL' => 70,
			'WRAPPER' => 69,
			'UNLESS' => 72,
			'TEXT' => 37,
			'REF' => 71,
			'GET' => 66,
			"\"" => 67,
			"\$" => 31,
			'RAWPERL' => 29,
			'THROW' => 28,
			'FILTER' => 8,
			'RETURN' => 9,
			'SET' => 43,
			'IDENT' => 12,
			'NOT' => 11,
			'META' => 1,
			'STOP' => 39,
			'TRY' => 2,
			'VIEW' => 41,
			'LITERAL' => 6,
			'WHILE' => 5,
			'INSERT' => 18,
			'PROCESS' => 51,
			'DEFAULT' => 56,
			'IF' => 15,
			'LAST' => 16,
			'NUMBER' => 44,
			'DEBUG' => 45,
			"(" => 49,
			'NEXT' => 48
		},
		DEFAULT => -3,
		GOTOS => {
			'defblockname' => 54,
			'directive' => 73,
			'atomdir' => 57,
			'condition' => 55,
			'macro' => 38,
			'chunks' => 52,
			'view' => 19,
			'try' => 34,
			'node' => 53,
			'atomexpr' => 33,
			'defblock' => 68,
			'chunk' => 32,
			'sterm' => 17,
			'setlist' => 47,
			'term' => 50,
			'loop' => 30,
			'item' => 14,
			'statement' => 46,
			'wrapper' => 65,
			'assign' => 10,
			'use' => 13,
			'ident' => 62,
			'perl' => 60,
			'lterm' => 24,
			'switch' => 23,
			'filter' => 40,
			'capture' => 7,
			'anonblock' => 42,
			'expr' => 58,
			'block' => 271,
			'rawperl' => 3
		}
	},
	{#State 198
		ACTIONS => {
			'TEXT' => 272
		}
	},
	{#State 199
		DEFAULT => -68
	},
	{#State 200
		ACTIONS => {
			"/" => 147,
			'CAT' => 151,
			'DIV' => 146,
			'AND' => 150,
			"+" => 148,
			"?" => 153,
			'OR' => 144,
			'MOD' => 149,
			'BINOP' => 152,
			'CMPOP' => 145
		},
		DEFAULT => -47
	},
	{#State 201
		DEFAULT => -58
	},
	{#State 202
		ACTIONS => {
			"/" => 147,
			'CAT' => 151,
			'DIV' => 146,
			"+" => 148,
			'AND' => 150,
			"?" => 153,
			'OR' => 144,
			'MOD' => 149,
			'BINOP' => 152,
			'CMPOP' => 145
		},
		DEFAULT => -45
	},
	{#State 203
		ACTIONS => {
			"+" => 148,
			'AND' => 150,
			"?" => 153,
			'MOD' => 149,
			'OR' => 144,
			"/" => 147,
			'DIV' => 146,
			'CAT' => 151,
			'BINOP' => 152,
			'CMPOP' => 145
		},
		DEFAULT => -61
	},
	{#State 204
		DEFAULT => -83
	},
	{#State 205
		DEFAULT => -76,
		GOTOS => {
			'@3-3' => 273
		}
	},
	{#State 206
		ACTIONS => {
			"\$" => 31,
			"\"" => 67,
			"\${" => 21,
			"{" => 59,
			'NUMBER' => 44,
			'LITERAL' => 78,
			"(" => 49,
			"[" => 25,
			'NOT' => 11,
			'IDENT' => 12,
			'REF' => 71
		},
		GOTOS => {
			'item' => 14,
			'ident' => 80,
			'expr' => 274,
			'node' => 53,
			'lterm' => 24,
			'sterm' => 17,
			'term' => 50
		}
	},
	{#State 207
		DEFAULT => -147
	},
	{#State 208
		DEFAULT => -146
	},
	{#State 209
		ACTIONS => {
			'PROCESS' => 51,
			'INSERT' => 18,
			'DEFAULT' => 56,
			'DEBUG' => 45,
			'NUMBER' => 44,
			'LAST' => 16,
			'IF' => 15,
			'NEXT' => 48,
			"(" => 49,
			'RETURN' => 9,
			'FILTER' => 8,
			'NOT' => 11,
			'IDENT' => 12,
			'SET' => 43,
			'TRY' => 2,
			'STOP' => 39,
			'META' => 1,
			'WHILE' => 5,
			'LITERAL' => 6,
			'VIEW' => 41,
			'INCLUDE' => 35,
			'TEXT' => 37,
			'UNLESS' => 72,
			'REF' => 71,
			'WRAPPER' => 69,
			'CALL' => 70,
			'THROW' => 28,
			'RAWPERL' => 29,
			"\$" => 31,
			"\"" => 67,
			'GET' => 66,
			'SWITCH' => 61,
			"[" => 25,
			'MACRO' => 63,
			";" => -18,
			'BLOCK' => 26,
			'FOR' => 64,
			'USE' => 27,
			"\${" => 21,
			"{" => 59,
			'PERL' => 20,
			'CLEAR' => 22
		},
		DEFAULT => -3,
		GOTOS => {
			'assign' => 10,
			'use' => 13,
			'rawperl' => 3,
			'block' => 4,
			'filter' => 40,
			'anonblock' => 42,
			'capture' => 7,
			'chunks' => 52,
			'node' => 53,
			'view' => 19,
			'defblockname' => 54,
			'condition' => 55,
			'atomdir' => 57,
			'item' => 14,
			'statement' => 46,
			'sterm' => 17,
			'setlist' => 47,
			'term' => 50,
			'perl' => 60,
			'ident' => 62,
			'switch' => 23,
			'lterm' => 24,
			'wrapper' => 65,
			'expr' => 58,
			'atomexpr' => 33,
			'try' => 34,
			'template' => 275,
			'macro' => 38,
			'directive' => 73,
			'loop' => 30,
			'chunk' => 32,
			'defblock' => 68
		}
	},
	{#State 210
		ACTIONS => {
			'BINOP' => 152,
			"+" => 148,
			'CMPOP' => 145,
			'MOD' => 149,
			"/" => 147,
			'CAT' => 151,
			'DIV' => 146
		},
		DEFAULT => -143
	},
	{#State 211
		ACTIONS => {
			"+" => 148,
			'BINOP' => 152,
			'MOD' => 149,
			"/" => 147,
			'DIV' => 146
		},
		DEFAULT => -140
	},
	{#State 212
		ACTIONS => {
			'MOD' => 149
		},
		DEFAULT => -138
	},
	{#State 213
		ACTIONS => {
			'MOD' => 149,
			'DIV' => 146
		},
		DEFAULT => -136
	},
	{#State 214
		ACTIONS => {
			'MOD' => 149,
			'DIV' => 146,
			"/" => 147
		},
		DEFAULT => -137
	},
	{#State 215
		DEFAULT => -139
	},
	{#State 216
		ACTIONS => {
			"+" => 148,
			'BINOP' => 152,
			'CAT' => 151,
			'DIV' => 146,
			"/" => 147,
			'MOD' => 149,
			'CMPOP' => 145
		},
		DEFAULT => -142
	},
	{#State 217
		ACTIONS => {
			"+" => 148,
			'BINOP' => 152,
			'CMPOP' => 145,
			'MOD' => 149,
			"/" => 147,
			'DIV' => 146
		},
		DEFAULT => -141
	},
	{#State 218
		ACTIONS => {
			"+" => 148,
			'DIV' => 146,
			"/" => 147,
			'MOD' => 149
		},
		DEFAULT => -135
	},
	{#State 219
		ACTIONS => {
			'BINOP' => 152,
			'CMPOP' => 145,
			":" => 276,
			"+" => 148,
			'AND' => 150,
			'MOD' => 149,
			'OR' => 144,
			"?" => 153,
			"/" => 147,
			'CAT' => 151,
			'DIV' => 146
		}
	},
	{#State 220
		ACTIONS => {
			'REF' => 71,
			'NOT' => 11,
			'IDENT' => 12,
			"[" => 25,
			"(" => 49,
			'LITERAL' => 78,
			"\"" => 67,
			"\$" => 31,
			'NUMBER' => 44,
			"{" => 59,
			"\${" => 21
		},
		GOTOS => {
			'sterm' => 17,
			'term' => 50,
			'item' => 14,
			'expr' => 277,
			'ident' => 80,
			'node' => 53,
			'lterm' => 24
		}
	},
	{#State 221
		ACTIONS => {
			"[" => 25,
			'REF' => 71,
			'NOT' => 11,
			'IDENT' => 12,
			"\$" => 31,
			"\"" => 67,
			'NUMBER' => 44,
			"\${" => 21,
			"{" => 59,
			"(" => 49,
			'LITERAL' => 78
		},
		GOTOS => {
			'term' => 50,
			'sterm' => 17,
			'lterm' => 24,
			'node' => 53,
			'item' => 14,
			'ident' => 80,
			'expr' => 278
		}
	},
	{#State 222
		DEFAULT => -110
	},
	{#State 223
		DEFAULT => -123
	},
	{#State 224
		DEFAULT => -122
	},
	{#State 225
		ACTIONS => {
			'CLEAR' => 22,
			"{" => 59,
			"\${" => 21,
			'PERL' => 20,
			'BLOCK' => 26,
			'FOR' => 64,
			'USE' => 27,
			'SWITCH' => 61,
			"[" => 25,
			'MACRO' => 63,
			";" => -18,
			'THROW' => 28,
			'RAWPERL' => 29,
			"\"" => 67,
			"\$" => 31,
			'GET' => 66,
			'REF' => 71,
			'TEXT' => 37,
			'UNLESS' => 72,
			'CALL' => 70,
			'WRAPPER' => 69,
			'INCLUDE' => 35,
			'WHILE' => 5,
			'LITERAL' => 6,
			'VIEW' => 41,
			'TRY' => 2,
			'STOP' => 39,
			'META' => 1,
			'IDENT' => 12,
			'NOT' => 11,
			'SET' => 43,
			'RETURN' => 9,
			'FILTER' => 8,
			'NEXT' => 48,
			"(" => 49,
			'DEBUG' => 45,
			'NUMBER' => 44,
			'LAST' => 16,
			'IF' => 15,
			'DEFAULT' => 56,
			'PROCESS' => 51,
			'INSERT' => 18
		},
		DEFAULT => -3,
		GOTOS => {
			'macro' => 38,
			'condition' => 55,
			'directive' => 73,
			'atomdir' => 57,
			'defblockname' => 54,
			'node' => 53,
			'atomexpr' => 33,
			'view' => 19,
			'try' => 34,
			'chunks' => 52,
			'term' => 50,
			'sterm' => 17,
			'setlist' => 47,
			'chunk' => 32,
			'defblock' => 68,
			'statement' => 46,
			'item' => 14,
			'loop' => 30,
			'use' => 13,
			'assign' => 10,
			'wrapper' => 65,
			'switch' => 23,
			'lterm' => 24,
			'perl' => 60,
			'ident' => 62,
			'anonblock' => 42,
			'capture' => 7,
			'filter' => 40,
			'rawperl' => 3,
			'block' => 279,
			'expr' => 58
		}
	},
	{#State 226
		DEFAULT => -91
	},
	{#State 227
		ACTIONS => {
			";" => 280
		}
	},
	{#State 228
		ACTIONS => {
			";" => -152,
			'OR' => 144,
			"?" => 153,
			'IDENT' => -152,
			'BINOP' => 152,
			"\${" => -152,
			'LITERAL' => -152,
			'COMMA' => -152,
			"+" => 148,
			'AND' => 150,
			'MOD' => 149,
			"/" => 147,
			'DIV' => 146,
			'CAT' => 151,
			"\$" => -152,
			'CMPOP' => 145
		},
		DEFAULT => -26
	},
	{#State 229
		DEFAULT => -94
	},
	{#State 230
		DEFAULT => -128
	},
	{#State 231
		DEFAULT => -127
	},
	{#State 232
		ACTIONS => {
			"[" => 25,
			'REF' => 71,
			'IDENT' => 282,
			'NOT' => 11,
			'NUMBER' => 44,
			"{" => 59,
			"\${" => 21,
			"\$" => 31,
			"\"" => 67,
			"(" => 49,
			'LITERAL' => 6
		},
		GOTOS => {
			'assign' => 139,
			'ident' => 138,
			'lterm' => 24,
			'node' => 53,
			'sterm' => 17,
			'margs' => 281,
			'term' => 50,
			'item' => 14,
			'expr' => 137
		}
	},
	{#State 233
		ACTIONS => {
			'CMPOP' => 145,
			"/" => 147,
			'DIV' => 146,
			'CAT' => 151,
			"+" => 148,
			'AND' => 150,
			'MOD' => 149,
			'BINOP' => 152,
			'OR' => 144,
			"?" => 153
		},
		DEFAULT => -26
	},
	{#State 234
		DEFAULT => -93
	},
	{#State 235
		ACTIONS => {
			"[" => 25,
			'REF' => 71,
			'IDENT' => 12,
			"\${" => 21,
			"{" => 59,
			'NUMBER' => 44,
			"\$" => 31,
			"\"" => 67,
			'LITERAL' => 78
		},
		GOTOS => {
			'term' => 283,
			'sterm' => 17,
			'lterm' => 24,
			'node' => 53,
			'ident' => 80,
			'item' => 14
		}
	},
	{#State 236
		ACTIONS => {
			"\${" => 21,
			"{" => 59,
			'NUMBER' => 44,
			"\$" => 31,
			"\"" => 67,
			'LITERAL' => 78,
			"[" => 25,
			'REF' => 71,
			'IDENT' => 12
		},
		GOTOS => {
			'item' => 14,
			'ident' => 80,
			'lterm' => 24,
			'node' => 53,
			'sterm' => 17,
			'term' => 284
		}
	},
	{#State 237
		DEFAULT => -56,
		GOTOS => {
			'@1-3' => 285
		}
	},
	{#State 238
		ACTIONS => {
			'REF' => 71,
			'IDENT' => 12,
			'NOT' => 11,
			"[" => 25,
			'COMMA' => 257,
			"(" => 49,
			'LITERAL' => 258,
			"\$" => 31,
			"\"" => 67,
			'NUMBER' => 44,
			"\${" => 21,
			"{" => 59
		},
		DEFAULT => -66,
		GOTOS => {
			'ident' => 261,
			'node' => 53,
			'lterm' => 24,
			'param' => 262,
			'sterm' => 17,
			'term' => 50,
			'expr' => 260,
			'item' => 259
		}
	},
	{#State 239
		DEFAULT => -180
	},
	{#State 240
		DEFAULT => -181
	},
	{#State 241
		ACTIONS => {
			'DOT' => 161
		},
		DEFAULT => -179
	},
	{#State 242
		DEFAULT => -113
	},
	{#State 243
		DEFAULT => -177
	},
	{#State 244
		ACTIONS => {
			'UNLESS' => 72,
			'TEXT' => 37,
			'REF' => 71,
			'CALL' => 70,
			'WRAPPER' => 69,
			'INCLUDE' => 35,
			'RAWPERL' => 29,
			'THROW' => 28,
			"\$" => 31,
			"\"" => 67,
			'GET' => 66,
			'BLOCK' => 26,
			'FOR' => 64,
			'USE' => 27,
			'SWITCH' => 61,
			'MACRO' => 63,
			"[" => 25,
			";" => -18,
			'CLEAR' => 22,
			"{" => 59,
			"\${" => 21,
			'PERL' => 20,
			'DEFAULT' => 56,
			'PROCESS' => 51,
			'INSERT' => 18,
			'NEXT' => 48,
			"(" => 49,
			'DEBUG' => 45,
			'NUMBER' => 44,
			'LAST' => 16,
			'IF' => 15,
			'IDENT' => 12,
			'NOT' => 11,
			'SET' => 43,
			'RETURN' => 9,
			'FILTER' => 8,
			'WHILE' => 5,
			'LITERAL' => 6,
			'VIEW' => 41,
			'TRY' => 2,
			'META' => 1,
			'STOP' => 39
		},
		DEFAULT => -3,
		GOTOS => {
			'capture' => 7,
			'anonblock' => 42,
			'filter' => 40,
			'rawperl' => 3,
			'block' => 286,
			'expr' => 58,
			'use' => 13,
			'wrapper' => 65,
			'assign' => 10,
			'switch' => 23,
			'lterm' => 24,
			'perl' => 60,
			'ident' => 62,
			'term' => 50,
			'sterm' => 17,
			'setlist' => 47,
			'defblock' => 68,
			'chunk' => 32,
			'statement' => 46,
			'item' => 14,
			'loop' => 30,
			'condition' => 55,
			'macro' => 38,
			'directive' => 73,
			'atomdir' => 57,
			'defblockname' => 54,
			'node' => 53,
			'atomexpr' => 33,
			'try' => 34,
			'view' => 19,
			'chunks' => 52
		}
	},
	{#State 245
		ACTIONS => {
			'SWITCH' => 61,
			";" => -18,
			"[" => 25,
			'MACRO' => 63,
			'FOR' => 64,
			'BLOCK' => 26,
			'USE' => 27,
			'PERL' => 20,
			"{" => 59,
			"\${" => 21,
			'CLEAR' => 22,
			'INCLUDE' => 35,
			'WRAPPER' => 69,
			'CALL' => 70,
			'UNLESS' => 72,
			'REF' => 71,
			'TEXT' => 37,
			'THROW' => 28,
			'RAWPERL' => 29,
			'GET' => 66,
			"\$" => 31,
			"\"" => 67,
			'FILTER' => 8,
			'RETURN' => 9,
			'NOT' => 11,
			'IDENT' => 12,
			'SET' => 43,
			'STOP' => 39,
			'META' => 1,
			'TRY' => 2,
			'WHILE' => 5,
			'VIEW' => 41,
			'LITERAL' => 6,
			'PROCESS' => 51,
			'INSERT' => 18,
			'DEFAULT' => 56,
			'DEBUG' => 45,
			'NUMBER' => 44,
			'IF' => 15,
			'LAST' => 16,
			'NEXT' => 48,
			"(" => 49
		},
		DEFAULT => -3,
		GOTOS => {
			'assign' => 10,
			'wrapper' => 65,
			'use' => 13,
			'ident' => 62,
			'perl' => 60,
			'switch' => 23,
			'lterm' => 24,
			'filter' => 40,
			'capture' => 7,
			'anonblock' => 42,
			'expr' => 58,
			'block' => 287,
			'rawperl' => 3,
			'defblockname' => 54,
			'atomdir' => 57,
			'directive' => 73,
			'macro' => 38,
			'condition' => 55,
			'chunks' => 52,
			'view' => 19,
			'try' => 34,
			'atomexpr' => 33,
			'node' => 53,
			'defblock' => 68,
			'chunk' => 32,
			'setlist' => 47,
			'sterm' => 17,
			'term' => 50,
			'loop' => 30,
			'item' => 14,
			'statement' => 46
		}
	},
	{#State 246
		DEFAULT => -104
	},
	{#State 247
		ACTIONS => {
			'TEXT' => 288
		}
	},
	{#State 248
		DEFAULT => -102
	},
	{#State 249
		ACTIONS => {
			";" => 289
		}
	},
	{#State 250
		ACTIONS => {
			'NUMBER' => 95,
			";" => 291,
			'FILENAME' => 86,
			'IDENT' => 101,
			'DEFAULT' => 290
		},
		GOTOS => {
			'filename' => 292,
			'filepart' => 92
		}
	},
	{#State 251
		ACTIONS => {
			'END' => 293
		}
	},
	{#State 252
		ACTIONS => {
			'CLEAR' => 22,
			'PERL' => 20,
			"\${" => 21,
			"{" => 59,
			'FOR' => 64,
			'BLOCK' => 26,
			'USE' => 27,
			'SWITCH' => 61,
			";" => -18,
			"[" => 25,
			'MACRO' => 63,
			'THROW' => 28,
			'RAWPERL' => 29,
			'GET' => 66,
			"\$" => 31,
			"\"" => 67,
			'WRAPPER' => 69,
			'CALL' => 70,
			'REF' => 71,
			'TEXT' => 37,
			'UNLESS' => 72,
			'INCLUDE' => 35,
			'WHILE' => 5,
			'VIEW' => 41,
			'LITERAL' => 6,
			'STOP' => 39,
			'META' => 1,
			'TRY' => 2,
			'IDENT' => 12,
			'NOT' => 11,
			'SET' => 43,
			'FILTER' => 8,
			'RETURN' => 9,
			'NEXT' => 48,
			"(" => 49,
			'NUMBER' => 44,
			'DEBUG' => 45,
			'IF' => 15,
			'LAST' => 16,
			'DEFAULT' => 56,
			'INSERT' => 18,
			'PROCESS' => 51
		},
		DEFAULT => -3,
		GOTOS => {
			'filter' => 40,
			'capture' => 7,
			'anonblock' => 42,
			'expr' => 58,
			'rawperl' => 3,
			'block' => 294,
			'wrapper' => 65,
			'assign' => 10,
			'use' => 13,
			'perl' => 60,
			'ident' => 62,
			'switch' => 23,
			'lterm' => 24,
			'sterm' => 17,
			'setlist' => 47,
			'chunk' => 32,
			'defblock' => 68,
			'term' => 50,
			'item' => 14,
			'loop' => 30,
			'statement' => 46,
			'defblockname' => 54,
			'macro' => 38,
			'condition' => 55,
			'directive' => 73,
			'atomdir' => 57,
			'chunks' => 52,
			'atomexpr' => 33,
			'node' => 53,
			'try' => 34,
			'view' => 19
		}
	},
	{#State 253
		ACTIONS => {
			"(" => 49,
			'NUMBER' => 44,
			"\"" => 67,
			"\$" => 31,
			'REF' => 71,
			'COMMA' => 257,
			'LITERAL' => 258,
			"\${" => 21,
			"{" => 59,
			'NOT' => 11,
			'IDENT' => 12,
			"[" => 25
		},
		DEFAULT => -164,
		GOTOS => {
			'lterm' => 24,
			'param' => 262,
			'node' => 53,
			'ident' => 261,
			'item' => 259,
			'expr' => 260,
			'term' => 50,
			'sterm' => 17
		}
	},
	{#State 254
		DEFAULT => -172
	},
	{#State 255
		ACTIONS => {
			'ASSIGN' => -162
		},
		DEFAULT => -169
	},
	{#State 256
		ACTIONS => {
			'END' => 295
		}
	},
	{#State 257
		DEFAULT => -157
	},
	{#State 258
		ACTIONS => {
			'ASSIGN' => 221
		},
		DEFAULT => -114
	},
	{#State 259
		ACTIONS => {
			"(" => 97,
			'ASSIGN' => 220
		},
		DEFAULT => -130
	},
	{#State 260
		ACTIONS => {
			'CMPOP' => 145,
			"/" => 147,
			'CAT' => 151,
			'DIV' => 146,
			'AND' => 150,
			"+" => 148,
			'MOD' => 149,
			'BINOP' => 152,
			'OR' => 144,
			"?" => 153
		},
		DEFAULT => -154
	},
	{#State 261
		ACTIONS => {
			'DOT' => 161,
			'ASSIGN' => 296
		},
		DEFAULT => -111
	},
	{#State 262
		DEFAULT => -155
	},
	{#State 263
		DEFAULT => -167
	},
	{#State 264
		ACTIONS => {
			'IDENT' => 12,
			'NOT' => 11,
			'REF' => 71,
			")" => 297,
			"[" => 25,
			'COMMA' => 257,
			"(" => 49,
			'LITERAL' => 258,
			'NUMBER' => 44,
			"{" => 59,
			"\${" => 21,
			"\$" => 31,
			"\"" => 67
		},
		GOTOS => {
			'ident' => 261,
			'param' => 262,
			'node' => 53,
			'lterm' => 24,
			'item' => 259,
			'expr' => 260,
			'sterm' => 17,
			'term' => 50
		}
	},
	{#State 265
		DEFAULT => -159
	},
	{#State 266
		DEFAULT => -131
	},
	{#State 267
		ACTIONS => {
			'ELSE' => 299,
			'ELSIF' => 298
		},
		DEFAULT => -50,
		GOTOS => {
			'else' => 300
		}
	},
	{#State 268
		DEFAULT => -169
	},
	{#State 269
		ACTIONS => {
			'END' => 301
		}
	},
	{#State 270
		DEFAULT => -119
	},
	{#State 271
		ACTIONS => {
			'END' => 302
		}
	},
	{#State 272
		ACTIONS => {
			'END' => 303
		}
	},
	{#State 273
		ACTIONS => {
			'VIEW' => 41,
			'LITERAL' => 6,
			'WHILE' => 5,
			'META' => 1,
			'STOP' => 39,
			'TRY' => 2,
			'SET' => 43,
			'NOT' => 11,
			'IDENT' => 12,
			'FILTER' => 8,
			'RETURN' => 9,
			"(" => 49,
			'NEXT' => 48,
			'IF' => 15,
			'LAST' => 16,
			'DEBUG' => 45,
			'NUMBER' => 44,
			'DEFAULT' => 56,
			'PROCESS' => 51,
			'INSERT' => 18,
			'CLEAR' => 22,
			'PERL' => 20,
			"\${" => 21,
			"{" => 59,
			'USE' => 27,
			'FOR' => 64,
			'BLOCK' => 26,
			";" => -18,
			"[" => 25,
			'MACRO' => 63,
			'SWITCH' => 61,
			'GET' => 66,
			"\$" => 31,
			"\"" => 67,
			'RAWPERL' => 29,
			'THROW' => 28,
			'WRAPPER' => 69,
			'CALL' => 70,
			'UNLESS' => 72,
			'TEXT' => 37,
			'REF' => 71,
			'INCLUDE' => 35
		},
		DEFAULT => -3,
		GOTOS => {
			'expr' => 58,
			'block' => 304,
			'rawperl' => 3,
			'filter' => 40,
			'capture' => 7,
			'anonblock' => 42,
			'ident' => 62,
			'perl' => 60,
			'switch' => 23,
			'lterm' => 24,
			'wrapper' => 65,
			'assign' => 10,
			'use' => 13,
			'loop' => 30,
			'item' => 14,
			'statement' => 46,
			'defblock' => 68,
			'chunk' => 32,
			'setlist' => 47,
			'sterm' => 17,
			'term' => 50,
			'chunks' => 52,
			'try' => 34,
			'view' => 19,
			'node' => 53,
			'atomexpr' => 33,
			'defblockname' => 54,
			'atomdir' => 57,
			'directive' => 73,
			'macro' => 38,
			'condition' => 55
		}
	},
	{#State 274
		ACTIONS => {
			"/" => 147,
			'CAT' => 151,
			'DIV' => 146,
			'AND' => 150,
			"+" => 148,
			'MOD' => 149,
			'CMPOP' => 145,
			"?" => 153,
			'OR' => 144,
			'BINOP' => 152
		},
		DEFAULT => -152
	},
	{#State 275
		ACTIONS => {
			'END' => 305
		}
	},
	{#State 276
		ACTIONS => {
			'NUMBER' => 44,
			"{" => 59,
			"\${" => 21,
			"\$" => 31,
			"\"" => 67,
			"(" => 49,
			'LITERAL' => 78,
			"[" => 25,
			'REF' => 71,
			'IDENT' => 12,
			'NOT' => 11
		},
		GOTOS => {
			'term' => 50,
			'sterm' => 17,
			'lterm' => 24,
			'node' => 53,
			'expr' => 306,
			'ident' => 80,
			'item' => 14
		}
	},
	{#State 277
		ACTIONS => {
			'OR' => 144,
			'CMPOP' => 145,
			"/" => 147,
			'DIV' => 146,
			'CAT' => 151,
			'AND' => 150,
			'MOD' => 149,
			'BINOP' => 152,
			"?" => 153,
			"+" => 148
		},
		DEFAULT => -126
	},
	{#State 278
		ACTIONS => {
			'DIV' => 146,
			'CAT' => 151,
			"/" => 147,
			'MOD' => 149,
			'AND' => 150,
			'CMPOP' => 145,
			'OR' => 144,
			"+" => 148,
			"?" => 153,
			'BINOP' => 152
		},
		DEFAULT => -125
	},
	{#State 279
		ACTIONS => {
			'CASE' => 308
		},
		DEFAULT => -55,
		GOTOS => {
			'case' => 307
		}
	},
	{#State 280
		ACTIONS => {
			'CLEAR' => 22,
			"\${" => 21,
			"{" => 59,
			'PERL' => 20,
			'BLOCK' => 26,
			'FOR' => 64,
			'USE' => 27,
			'SWITCH' => 61,
			'MACRO' => 63,
			"[" => 25,
			";" => -18,
			'THROW' => 28,
			'RAWPERL' => 29,
			"\"" => 67,
			"\$" => 31,
			'GET' => 66,
			'TEXT' => 37,
			'UNLESS' => 72,
			'REF' => 71,
			'WRAPPER' => 69,
			'CALL' => 70,
			'INCLUDE' => 35,
			'WHILE' => 5,
			'LITERAL' => 6,
			'VIEW' => 41,
			'TRY' => 2,
			'STOP' => 39,
			'META' => 1,
			'IDENT' => 12,
			'NOT' => 11,
			'SET' => 43,
			'RETURN' => 9,
			'FILTER' => 8,
			'NEXT' => 48,
			"(" => 49,
			'DEBUG' => 45,
			'NUMBER' => 44,
			'LAST' => 16,
			'IF' => 15,
			'DEFAULT' => 56,
			'PROCESS' => 51,
			'INSERT' => 18
		},
		DEFAULT => -3,
		GOTOS => {
			'try' => 34,
			'view' => 19,
			'atomexpr' => 33,
			'node' => 53,
			'chunks' => 52,
			'directive' => 73,
			'atomdir' => 57,
			'condition' => 55,
			'macro' => 38,
			'defblockname' => 54,
			'statement' => 46,
			'loop' => 30,
			'item' => 14,
			'term' => 50,
			'defblock' => 68,
			'chunk' => 32,
			'setlist' => 47,
			'sterm' => 17,
			'lterm' => 24,
			'switch' => 23,
			'ident' => 62,
			'perl' => 60,
			'use' => 13,
			'wrapper' => 65,
			'assign' => 10,
			'block' => 309,
			'rawperl' => 3,
			'expr' => 58,
			'capture' => 7,
			'anonblock' => 42,
			'filter' => 40
		}
	},
	{#State 281
		ACTIONS => {
			")" => 312,
			'IDENT' => 311,
			'COMMA' => 310
		}
	},
	{#State 282
		ACTIONS => {
			'COMMA' => -98,
			")" => -98,
			'IDENT' => -98
		},
		DEFAULT => -132
	},
	{#State 283
		DEFAULT => -158,
		GOTOS => {
			'args' => 313
		}
	},
	{#State 284
		DEFAULT => -158,
		GOTOS => {
			'args' => 314
		}
	},
	{#State 285
		ACTIONS => {
			'GET' => 66,
			"\"" => 67,
			"\$" => 31,
			'THROW' => 28,
			'RAWPERL' => 29,
			'INCLUDE' => 35,
			'WRAPPER' => 69,
			'CALL' => 70,
			'REF' => 71,
			'UNLESS' => 72,
			'TEXT' => 37,
			'PERL' => 20,
			"{" => 59,
			"\${" => 21,
			'CLEAR' => 22,
			";" => -18,
			'MACRO' => 63,
			"[" => 25,
			'SWITCH' => 61,
			'USE' => 27,
			'FOR' => 64,
			'BLOCK' => 26,
			'IF' => 15,
			'LAST' => 16,
			'DEBUG' => 45,
			'NUMBER' => 44,
			"(" => 49,
			'NEXT' => 48,
			'INSERT' => 18,
			'PROCESS' => 51,
			'DEFAULT' => 56,
			'STOP' => 39,
			'META' => 1,
			'TRY' => 2,
			'VIEW' => 41,
			'LITERAL' => 6,
			'WHILE' => 5,
			'FILTER' => 8,
			'RETURN' => 9,
			'SET' => 43,
			'IDENT' => 12,
			'NOT' => 11
		},
		DEFAULT => -3,
		GOTOS => {
			'try' => 34,
			'view' => 19,
			'atomexpr' => 33,
			'node' => 53,
			'chunks' => 52,
			'directive' => 73,
			'atomdir' => 57,
			'condition' => 55,
			'macro' => 38,
			'defblockname' => 54,
			'statement' => 46,
			'loop' => 30,
			'item' => 14,
			'term' => 50,
			'defblock' => 68,
			'chunk' => 32,
			'setlist' => 47,
			'sterm' => 17,
			'switch' => 23,
			'lterm' => 24,
			'ident' => 62,
			'perl' => 60,
			'use' => 13,
			'wrapper' => 65,
			'assign' => 10,
			'block' => 315,
			'rawperl' => 3,
			'expr' => 58,
			'capture' => 7,
			'anonblock' => 42,
			'filter' => 40
		}
	},
	{#State 286
		ACTIONS => {
			'END' => 316
		}
	},
	{#State 287
		ACTIONS => {
			'ELSIF' => 298,
			'ELSE' => 299
		},
		DEFAULT => -50,
		GOTOS => {
			'else' => 317
		}
	},
	{#State 288
		ACTIONS => {
			"\"" => 318
		}
	},
	{#State 289
		ACTIONS => {
			'UNLESS' => 72,
			'TEXT' => 37,
			'REF' => 71,
			'CALL' => 70,
			'WRAPPER' => 69,
			'INCLUDE' => 35,
			"\"" => 67,
			"\$" => 31,
			'GET' => 66,
			'RAWPERL' => 29,
			'THROW' => 28,
			'USE' => 27,
			'BLOCK' => 26,
			'FOR' => 64,
			"[" => 25,
			'MACRO' => 63,
			";" => -18,
			'SWITCH' => 61,
			'CLEAR' => 22,
			"{" => 59,
			"\${" => 21,
			'PERL' => 20,
			'DEFAULT' => 56,
			'PROCESS' => 51,
			'INSERT' => 18,
			"(" => 49,
			'NEXT' => 48,
			'LAST' => 16,
			'IF' => 15,
			'DEBUG' => 45,
			'NUMBER' => 44,
			'SET' => 43,
			'NOT' => 11,
			'IDENT' => 12,
			'RETURN' => 9,
			'FILTER' => 8,
			'LITERAL' => 6,
			'VIEW' => 41,
			'WHILE' => 5,
			'TRY' => 2,
			'STOP' => 39,
			'META' => 1
		},
		DEFAULT => -3,
		GOTOS => {
			'assign' => 10,
			'wrapper' => 65,
			'use' => 13,
			'perl' => 60,
			'ident' => 62,
			'lterm' => 24,
			'switch' => 23,
			'filter' => 40,
			'capture' => 7,
			'anonblock' => 42,
			'expr' => 58,
			'rawperl' => 3,
			'block' => 319,
			'defblockname' => 54,
			'condition' => 55,
			'macro' => 38,
			'directive' => 73,
			'atomdir' => 57,
			'chunks' => 52,
			'node' => 53,
			'atomexpr' => 33,
			'try' => 34,
			'view' => 19,
			'setlist' => 47,
			'sterm' => 17,
			'defblock' => 68,
			'chunk' => 32,
			'term' => 50,
			'item' => 14,
			'loop' => 30,
			'statement' => 46
		}
	},
	{#State 290
		ACTIONS => {
			";" => 320
		}
	},
	{#State 291
		ACTIONS => {
			'USE' => 27,
			'FOR' => 64,
			'BLOCK' => 26,
			";" => -18,
			'MACRO' => 63,
			"[" => 25,
			'SWITCH' => 61,
			'CLEAR' => 22,
			'PERL' => 20,
			"\${" => 21,
			"{" => 59,
			'WRAPPER' => 69,
			'CALL' => 70,
			'TEXT' => 37,
			'REF' => 71,
			'UNLESS' => 72,
			'INCLUDE' => 35,
			'GET' => 66,
			"\$" => 31,
			"\"" => 67,
			'THROW' => 28,
			'RAWPERL' => 29,
			'SET' => 43,
			'NOT' => 11,
			'IDENT' => 12,
			'FILTER' => 8,
			'RETURN' => 9,
			'VIEW' => 41,
			'LITERAL' => 6,
			'WHILE' => 5,
			'META' => 1,
			'STOP' => 39,
			'TRY' => 2,
			'DEFAULT' => 56,
			'INSERT' => 18,
			'PROCESS' => 51,
			"(" => 49,
			'NEXT' => 48,
			'IF' => 15,
			'LAST' => 16,
			'DEBUG' => 45,
			'NUMBER' => 44
		},
		DEFAULT => -3,
		GOTOS => {
			'use' => 13,
			'assign' => 10,
			'wrapper' => 65,
			'lterm' => 24,
			'switch' => 23,
			'ident' => 62,
			'perl' => 60,
			'capture' => 7,
			'anonblock' => 42,
			'filter' => 40,
			'block' => 321,
			'rawperl' => 3,
			'expr' => 58,
			'atomdir' => 57,
			'directive' => 73,
			'macro' => 38,
			'condition' => 55,
			'defblockname' => 54,
			'view' => 19,
			'try' => 34,
			'node' => 53,
			'atomexpr' => 33,
			'chunks' => 52,
			'term' => 50,
			'chunk' => 32,
			'defblock' => 68,
			'sterm' => 17,
			'setlist' => 47,
			'statement' => 46,
			'loop' => 30,
			'item' => 14
		}
	},
	{#State 292
		ACTIONS => {
			'DOT' => 180,
			";" => 322
		}
	},
	{#State 293
		DEFAULT => -69
	},
	{#State 294
		ACTIONS => {
			'END' => 323
		}
	},
	{#State 295
		DEFAULT => -82
	},
	{#State 296
		ACTIONS => {
			'IDENT' => 12,
			'REF' => 71,
			'NOT' => 11,
			"[" => 25,
			"(" => 49,
			'LITERAL' => 78,
			'NUMBER' => 44,
			"\${" => 21,
			"{" => 59,
			"\$" => 31,
			"\"" => 67
		},
		GOTOS => {
			'term' => 50,
			'sterm' => 17,
			'lterm' => 24,
			'node' => 53,
			'item' => 14,
			'expr' => 324,
			'ident' => 80
		}
	},
	{#State 297
		DEFAULT => -166
	},
	{#State 298
		ACTIONS => {
			'REF' => 71,
			'IDENT' => 12,
			'NOT' => 11,
			"[" => 25,
			'LITERAL' => 78,
			"(" => 49,
			"\"" => 67,
			"\$" => 31,
			"\${" => 21,
			"{" => 59,
			'NUMBER' => 44
		},
		GOTOS => {
			'node' => 53,
			'lterm' => 24,
			'expr' => 325,
			'ident' => 80,
			'item' => 14,
			'term' => 50,
			'sterm' => 17
		}
	},
	{#State 299
		ACTIONS => {
			";" => 326
		}
	},
	{#State 300
		ACTIONS => {
			'END' => 327
		}
	},
	{#State 301
		DEFAULT => -79
	},
	{#State 302
		DEFAULT => -90
	},
	{#State 303
		DEFAULT => -81
	},
	{#State 304
		ACTIONS => {
			'END' => 328
		}
	},
	{#State 305
		DEFAULT => -84
	},
	{#State 306
		ACTIONS => {
			'OR' => 144,
			"/" => 147,
			'CAT' => 151,
			'DIV' => 146,
			'AND' => 150,
			'MOD' => 149,
			'CMPOP' => 145,
			"?" => 153,
			'BINOP' => 152,
			"+" => 148
		},
		DEFAULT => -145
	},
	{#State 307
		ACTIONS => {
			'END' => 329
		}
	},
	{#State 308
		ACTIONS => {
			'LITERAL' => 78,
			"\"" => 67,
			"\$" => 31,
			'NUMBER' => 44,
			"\${" => 21,
			"{" => 59,
			'DEFAULT' => 331,
			'REF' => 71,
			'IDENT' => 12,
			";" => 332,
			"[" => 25
		},
		GOTOS => {
			'sterm' => 17,
			'term' => 330,
			'ident' => 80,
			'item' => 14,
			'node' => 53,
			'lterm' => 24
		}
	},
	{#State 309
		ACTIONS => {
			'END' => 333
		}
	},
	{#State 310
		DEFAULT => -97
	},
	{#State 311
		DEFAULT => -96
	},
	{#State 312
		ACTIONS => {
			'CALL' => 70,
			'WRAPPER' => 69,
			'UNLESS' => 72,
			'REF' => 71,
			'INCLUDE' => 35,
			'THROW' => 28,
			'GET' => 66,
			"\"" => 67,
			"\$" => 31,
			'FOR' => 64,
			'BLOCK' => 227,
			'SWITCH' => 61,
			"[" => 25,
			'CLEAR' => 22,
			'PERL' => 20,
			"\${" => 21,
			"{" => 59,
			'DEFAULT' => 56,
			'PROCESS' => 51,
			'INSERT' => 18,
			'NEXT' => 48,
			"(" => 49,
			'DEBUG' => 45,
			'NUMBER' => 44,
			'IF' => 15,
			'LAST' => 16,
			'NOT' => 11,
			'IDENT' => 12,
			'SET' => 43,
			'FILTER' => 8,
			'RETURN' => 9,
			'WHILE' => 5,
			'LITERAL' => 6,
			'STOP' => 39,
			'TRY' => 2
		},
		GOTOS => {
			'filter' => 40,
			'expr' => 233,
			'mdir' => 334,
			'wrapper' => 65,
			'assign' => 10,
			'lterm' => 24,
			'switch' => 23,
			'ident' => 138,
			'perl' => 60,
			'term' => 50,
			'setlist' => 47,
			'sterm' => 17,
			'loop' => 30,
			'item' => 14,
			'directive' => 229,
			'atomdir' => 57,
			'condition' => 55,
			'try' => 34,
			'atomexpr' => 33,
			'node' => 53
		}
	},
	{#State 313
		ACTIONS => {
			"[" => 25,
			'REF' => 71,
			'NOT' => 11,
			'IDENT' => 12,
			"\${" => 21,
			"{" => 59,
			'NUMBER' => 44,
			"\$" => 31,
			"\"" => 67,
			'LITERAL' => 258,
			"(" => 49,
			'COMMA' => 257
		},
		DEFAULT => -64,
		GOTOS => {
			'param' => 262,
			'node' => 53,
			'lterm' => 24,
			'ident' => 261,
			'expr' => 260,
			'item' => 259,
			'term' => 50,
			'sterm' => 17
		}
	},
	{#State 314
		ACTIONS => {
			'NUMBER' => 44,
			"{" => 59,
			"\${" => 21,
			"\$" => 31,
			"\"" => 67,
			"(" => 49,
			'COMMA' => 257,
			'LITERAL' => 258,
			"[" => 25,
			'NOT' => 11,
			'IDENT' => 12,
			'REF' => 71
		},
		DEFAULT => -65,
		GOTOS => {
			'term' => 50,
			'sterm' => 17,
			'item' => 259,
			'expr' => 260,
			'param' => 262,
			'lterm' => 24,
			'node' => 53,
			'ident' => 261
		}
	},
	{#State 315
		ACTIONS => {
			'ELSE' => 335
		},
		DEFAULT => -63,
		GOTOS => {
			'loopelse' => 336
		}
	},
	{#State 316
		DEFAULT => -67
	},
	{#State 317
		ACTIONS => {
			'END' => 337
		}
	},
	{#State 318
		DEFAULT => -103
	},
	{#State 319
		DEFAULT => -73
	},
	{#State 320
		ACTIONS => {
			"\"" => 67,
			"\$" => 31,
			'GET' => 66,
			'RAWPERL' => 29,
			'THROW' => 28,
			'INCLUDE' => 35,
			'TEXT' => 37,
			'REF' => 71,
			'UNLESS' => 72,
			'CALL' => 70,
			'WRAPPER' => 69,
			"{" => 59,
			"\${" => 21,
			'PERL' => 20,
			'CLEAR' => 22,
			'MACRO' => 63,
			"[" => 25,
			";" => -18,
			'SWITCH' => 61,
			'USE' => 27,
			'BLOCK' => 26,
			'FOR' => 64,
			'LAST' => 16,
			'IF' => 15,
			'DEBUG' => 45,
			'NUMBER' => 44,
			"(" => 49,
			'NEXT' => 48,
			'PROCESS' => 51,
			'INSERT' => 18,
			'DEFAULT' => 56,
			'TRY' => 2,
			'STOP' => 39,
			'META' => 1,
			'LITERAL' => 6,
			'VIEW' => 41,
			'WHILE' => 5,
			'RETURN' => 9,
			'FILTER' => 8,
			'SET' => 43,
			'NOT' => 11,
			'IDENT' => 12
		},
		DEFAULT => -3,
		GOTOS => {
			'expr' => 58,
			'block' => 338,
			'rawperl' => 3,
			'filter' => 40,
			'anonblock' => 42,
			'capture' => 7,
			'ident' => 62,
			'perl' => 60,
			'switch' => 23,
			'lterm' => 24,
			'assign' => 10,
			'wrapper' => 65,
			'use' => 13,
			'loop' => 30,
			'item' => 14,
			'statement' => 46,
			'chunk' => 32,
			'defblock' => 68,
			'setlist' => 47,
			'sterm' => 17,
			'term' => 50,
			'chunks' => 52,
			'try' => 34,
			'view' => 19,
			'node' => 53,
			'atomexpr' => 33,
			'defblockname' => 54,
			'directive' => 73,
			'atomdir' => 57,
			'condition' => 55,
			'macro' => 38
		}
	},
	{#State 321
		ACTIONS => {
			'CATCH' => 250,
			'FINAL' => 249
		},
		DEFAULT => -74,
		GOTOS => {
			'final' => 339
		}
	},
	{#State 322
		ACTIONS => {
			'RETURN' => 9,
			'FILTER' => 8,
			'NOT' => 11,
			'IDENT' => 12,
			'SET' => 43,
			'TRY' => 2,
			'STOP' => 39,
			'META' => 1,
			'WHILE' => 5,
			'LITERAL' => 6,
			'VIEW' => 41,
			'PROCESS' => 51,
			'INSERT' => 18,
			'DEFAULT' => 56,
			'NUMBER' => 44,
			'DEBUG' => 45,
			'LAST' => 16,
			'IF' => 15,
			'NEXT' => 48,
			"(" => 49,
			'SWITCH' => 61,
			'MACRO' => 63,
			"[" => 25,
			";" => -18,
			'BLOCK' => 26,
			'FOR' => 64,
			'USE' => 27,
			"{" => 59,
			"\${" => 21,
			'PERL' => 20,
			'CLEAR' => 22,
			'INCLUDE' => 35,
			'UNLESS' => 72,
			'REF' => 71,
			'TEXT' => 37,
			'CALL' => 70,
			'WRAPPER' => 69,
			'THROW' => 28,
			'RAWPERL' => 29,
			"\"" => 67,
			"\$" => 31,
			'GET' => 66
		},
		DEFAULT => -3,
		GOTOS => {
			'filter' => 40,
			'capture' => 7,
			'anonblock' => 42,
			'expr' => 58,
			'rawperl' => 3,
			'block' => 340,
			'assign' => 10,
			'wrapper' => 65,
			'use' => 13,
			'perl' => 60,
			'ident' => 62,
			'lterm' => 24,
			'switch' => 23,
			'sterm' => 17,
			'setlist' => 47,
			'defblock' => 68,
			'chunk' => 32,
			'term' => 50,
			'item' => 14,
			'loop' => 30,
			'statement' => 46,
			'defblockname' => 54,
			'condition' => 55,
			'macro' => 38,
			'directive' => 73,
			'atomdir' => 57,
			'chunks' => 52,
			'atomexpr' => 33,
			'node' => 53,
			'try' => 34,
			'view' => 19
		}
	},
	{#State 323
		DEFAULT => -60
	},
	{#State 324
		ACTIONS => {
			'CMPOP' => 145,
			'AND' => 150,
			"+" => 148,
			'MOD' => 149,
			"/" => 147,
			'DIV' => 146,
			'CAT' => 151,
			'BINOP' => 152,
			'OR' => 144,
			"?" => 153
		},
		DEFAULT => -156
	},
	{#State 325
		ACTIONS => {
			"/" => 147,
			'CAT' => 151,
			'DIV' => 146,
			"+" => 148,
			'AND' => 150,
			";" => 341,
			'MOD' => 149,
			'OR' => 144,
			"?" => 153,
			'BINOP' => 152,
			'CMPOP' => 145
		}
	},
	{#State 326
		ACTIONS => {
			'FILTER' => 8,
			'RETURN' => 9,
			'IDENT' => 12,
			'NOT' => 11,
			'SET' => 43,
			'STOP' => 39,
			'META' => 1,
			'TRY' => 2,
			'WHILE' => 5,
			'VIEW' => 41,
			'LITERAL' => 6,
			'INSERT' => 18,
			'PROCESS' => 51,
			'DEFAULT' => 56,
			'NUMBER' => 44,
			'DEBUG' => 45,
			'IF' => 15,
			'LAST' => 16,
			'NEXT' => 48,
			"(" => 49,
			'SWITCH' => 61,
			";" => -18,
			'MACRO' => 63,
			"[" => 25,
			'FOR' => 64,
			'BLOCK' => 26,
			'USE' => 27,
			'PERL' => 20,
			"{" => 59,
			"\${" => 21,
			'CLEAR' => 22,
			'INCLUDE' => 35,
			'CALL' => 70,
			'WRAPPER' => 69,
			'REF' => 71,
			'UNLESS' => 72,
			'TEXT' => 37,
			'THROW' => 28,
			'RAWPERL' => 29,
			'GET' => 66,
			"\$" => 31,
			"\"" => 67
		},
		DEFAULT => -3,
		GOTOS => {
			'filter' => 40,
			'capture' => 7,
			'anonblock' => 42,
			'expr' => 58,
			'rawperl' => 3,
			'block' => 342,
			'assign' => 10,
			'wrapper' => 65,
			'use' => 13,
			'perl' => 60,
			'ident' => 62,
			'switch' => 23,
			'lterm' => 24,
			'setlist' => 47,
			'sterm' => 17,
			'chunk' => 32,
			'defblock' => 68,
			'term' => 50,
			'item' => 14,
			'loop' => 30,
			'statement' => 46,
			'defblockname' => 54,
			'macro' => 38,
			'condition' => 55,
			'directive' => 73,
			'atomdir' => 57,
			'chunks' => 52,
			'node' => 53,
			'atomexpr' => 33,
			'view' => 19,
			'try' => 34
		}
	},
	{#State 327
		DEFAULT => -44
	},
	{#State 328
		DEFAULT => -77
	},
	{#State 329
		DEFAULT => -51
	},
	{#State 330
		ACTIONS => {
			";" => 343
		}
	},
	{#State 331
		ACTIONS => {
			";" => 344
		}
	},
	{#State 332
		ACTIONS => {
			'CLEAR' => 22,
			"{" => 59,
			"\${" => 21,
			'PERL' => 20,
			'USE' => 27,
			'BLOCK' => 26,
			'FOR' => 64,
			"[" => 25,
			'MACRO' => 63,
			";" => -18,
			'SWITCH' => 61,
			"\"" => 67,
			"\$" => 31,
			'GET' => 66,
			'RAWPERL' => 29,
			'THROW' => 28,
			'UNLESS' => 72,
			'TEXT' => 37,
			'REF' => 71,
			'WRAPPER' => 69,
			'CALL' => 70,
			'INCLUDE' => 35,
			'LITERAL' => 6,
			'VIEW' => 41,
			'WHILE' => 5,
			'TRY' => 2,
			'META' => 1,
			'STOP' => 39,
			'SET' => 43,
			'NOT' => 11,
			'IDENT' => 12,
			'RETURN' => 9,
			'FILTER' => 8,
			"(" => 49,
			'NEXT' => 48,
			'LAST' => 16,
			'IF' => 15,
			'DEBUG' => 45,
			'NUMBER' => 44,
			'DEFAULT' => 56,
			'INSERT' => 18,
			'PROCESS' => 51
		},
		DEFAULT => -3,
		GOTOS => {
			'assign' => 10,
			'wrapper' => 65,
			'use' => 13,
			'ident' => 62,
			'perl' => 60,
			'switch' => 23,
			'lterm' => 24,
			'filter' => 40,
			'capture' => 7,
			'anonblock' => 42,
			'expr' => 58,
			'block' => 345,
			'rawperl' => 3,
			'defblockname' => 54,
			'directive' => 73,
			'atomdir' => 57,
			'condition' => 55,
			'macro' => 38,
			'chunks' => 52,
			'view' => 19,
			'try' => 34,
			'node' => 53,
			'atomexpr' => 33,
			'chunk' => 32,
			'defblock' => 68,
			'setlist' => 47,
			'sterm' => 17,
			'term' => 50,
			'loop' => 30,
			'item' => 14,
			'statement' => 46
		}
	},
	{#State 333
		DEFAULT => -95
	},
	{#State 334
		DEFAULT => -92
	},
	{#State 335
		ACTIONS => {
			";" => 346
		}
	},
	{#State 336
		ACTIONS => {
			'END' => 347
		}
	},
	{#State 337
		DEFAULT => -46
	},
	{#State 338
		ACTIONS => {
			'CATCH' => 250,
			'FINAL' => 249
		},
		DEFAULT => -74,
		GOTOS => {
			'final' => 348
		}
	},
	{#State 339
		DEFAULT => -72
	},
	{#State 340
		ACTIONS => {
			'FINAL' => 249,
			'CATCH' => 250
		},
		DEFAULT => -74,
		GOTOS => {
			'final' => 349
		}
	},
	{#State 341
		ACTIONS => {
			'INSERT' => 18,
			'PROCESS' => 51,
			'DEFAULT' => 56,
			'IF' => 15,
			'LAST' => 16,
			'DEBUG' => 45,
			'NUMBER' => 44,
			"(" => 49,
			'NEXT' => 48,
			'FILTER' => 8,
			'RETURN' => 9,
			'SET' => 43,
			'IDENT' => 12,
			'NOT' => 11,
			'STOP' => 39,
			'META' => 1,
			'TRY' => 2,
			'VIEW' => 41,
			'LITERAL' => 6,
			'WHILE' => 5,
			'INCLUDE' => 35,
			'WRAPPER' => 69,
			'CALL' => 70,
			'UNLESS' => 72,
			'REF' => 71,
			'TEXT' => 37,
			'GET' => 66,
			"\$" => 31,
			"\"" => 67,
			'RAWPERL' => 29,
			'THROW' => 28,
			";" => -18,
			'MACRO' => 63,
			"[" => 25,
			'SWITCH' => 61,
			'USE' => 27,
			'FOR' => 64,
			'BLOCK' => 26,
			'PERL' => 20,
			"{" => 59,
			"\${" => 21,
			'CLEAR' => 22
		},
		DEFAULT => -3,
		GOTOS => {
			'use' => 13,
			'wrapper' => 65,
			'assign' => 10,
			'switch' => 23,
			'lterm' => 24,
			'perl' => 60,
			'ident' => 62,
			'anonblock' => 42,
			'capture' => 7,
			'filter' => 40,
			'rawperl' => 3,
			'block' => 350,
			'expr' => 58,
			'condition' => 55,
			'macro' => 38,
			'directive' => 73,
			'atomdir' => 57,
			'defblockname' => 54,
			'node' => 53,
			'atomexpr' => 33,
			'view' => 19,
			'try' => 34,
			'chunks' => 52,
			'term' => 50,
			'setlist' => 47,
			'sterm' => 17,
			'chunk' => 32,
			'defblock' => 68,
			'statement' => 46,
			'item' => 14,
			'loop' => 30
		}
	},
	{#State 342
		DEFAULT => -49
	},
	{#State 343
		ACTIONS => {
			'SWITCH' => 61,
			"[" => 25,
			'MACRO' => 63,
			";" => -18,
			'BLOCK' => 26,
			'FOR' => 64,
			'USE' => 27,
			"\${" => 21,
			"{" => 59,
			'PERL' => 20,
			'CLEAR' => 22,
			'INCLUDE' => 35,
			'UNLESS' => 72,
			'REF' => 71,
			'TEXT' => 37,
			'WRAPPER' => 69,
			'CALL' => 70,
			'THROW' => 28,
			'RAWPERL' => 29,
			"\"" => 67,
			"\$" => 31,
			'GET' => 66,
			'RETURN' => 9,
			'FILTER' => 8,
			'IDENT' => 12,
			'NOT' => 11,
			'SET' => 43,
			'TRY' => 2,
			'META' => 1,
			'STOP' => 39,
			'WHILE' => 5,
			'LITERAL' => 6,
			'VIEW' => 41,
			'INSERT' => 18,
			'PROCESS' => 51,
			'DEFAULT' => 56,
			'NUMBER' => 44,
			'DEBUG' => 45,
			'LAST' => 16,
			'IF' => 15,
			'NEXT' => 48,
			"(" => 49
		},
		DEFAULT => -3,
		GOTOS => {
			'chunks' => 52,
			'atomexpr' => 33,
			'node' => 53,
			'try' => 34,
			'view' => 19,
			'defblockname' => 54,
			'macro' => 38,
			'condition' => 55,
			'atomdir' => 57,
			'directive' => 73,
			'item' => 14,
			'loop' => 30,
			'statement' => 46,
			'setlist' => 47,
			'sterm' => 17,
			'defblock' => 68,
			'chunk' => 32,
			'term' => 50,
			'perl' => 60,
			'ident' => 62,
			'lterm' => 24,
			'switch' => 23,
			'assign' => 10,
			'wrapper' => 65,
			'use' => 13,
			'expr' => 58,
			'rawperl' => 3,
			'block' => 351,
			'filter' => 40,
			'capture' => 7,
			'anonblock' => 42
		}
	},
	{#State 344
		ACTIONS => {
			'CLEAR' => 22,
			"{" => 59,
			"\${" => 21,
			'PERL' => 20,
			'USE' => 27,
			'BLOCK' => 26,
			'FOR' => 64,
			"[" => 25,
			'MACRO' => 63,
			";" => -18,
			'SWITCH' => 61,
			"\$" => 31,
			"\"" => 67,
			'GET' => 66,
			'THROW' => 28,
			'RAWPERL' => 29,
			'UNLESS' => 72,
			'REF' => 71,
			'TEXT' => 37,
			'CALL' => 70,
			'WRAPPER' => 69,
			'INCLUDE' => 35,
			'LITERAL' => 6,
			'VIEW' => 41,
			'WHILE' => 5,
			'TRY' => 2,
			'META' => 1,
			'STOP' => 39,
			'SET' => 43,
			'NOT' => 11,
			'IDENT' => 12,
			'RETURN' => 9,
			'FILTER' => 8,
			"(" => 49,
			'NEXT' => 48,
			'LAST' => 16,
			'IF' => 15,
			'NUMBER' => 44,
			'DEBUG' => 45,
			'DEFAULT' => 56,
			'INSERT' => 18,
			'PROCESS' => 51
		},
		DEFAULT => -3,
		GOTOS => {
			'assign' => 10,
			'wrapper' => 65,
			'use' => 13,
			'ident' => 62,
			'perl' => 60,
			'switch' => 23,
			'lterm' => 24,
			'filter' => 40,
			'anonblock' => 42,
			'capture' => 7,
			'expr' => 58,
			'block' => 352,
			'rawperl' => 3,
			'defblockname' => 54,
			'atomdir' => 57,
			'directive' => 73,
			'condition' => 55,
			'macro' => 38,
			'chunks' => 52,
			'try' => 34,
			'view' => 19,
			'atomexpr' => 33,
			'node' => 53,
			'chunk' => 32,
			'defblock' => 68,
			'setlist' => 47,
			'sterm' => 17,
			'term' => 50,
			'loop' => 30,
			'item' => 14,
			'statement' => 46
		}
	},
	{#State 345
		DEFAULT => -54
	},
	{#State 346
		ACTIONS => {
			'GET' => 66,
			"\"" => 67,
			"\$" => 31,
			'THROW' => 28,
			'RAWPERL' => 29,
			'WRAPPER' => 69,
			'CALL' => 70,
			'REF' => 71,
			'UNLESS' => 72,
			'TEXT' => 37,
			'INCLUDE' => 35,
			'CLEAR' => 22,
			'PERL' => 20,
			"{" => 59,
			"\${" => 21,
			'USE' => 27,
			'FOR' => 64,
			'BLOCK' => 26,
			";" => -18,
			'MACRO' => 63,
			"[" => 25,
			'SWITCH' => 61,
			"(" => 49,
			'NEXT' => 48,
			'IF' => 15,
			'LAST' => 16,
			'DEBUG' => 45,
			'NUMBER' => 44,
			'DEFAULT' => 56,
			'INSERT' => 18,
			'PROCESS' => 51,
			'VIEW' => 41,
			'LITERAL' => 6,
			'WHILE' => 5,
			'META' => 1,
			'STOP' => 39,
			'TRY' => 2,
			'SET' => 43,
			'NOT' => 11,
			'IDENT' => 12,
			'FILTER' => 8,
			'RETURN' => 9
		},
		DEFAULT => -3,
		GOTOS => {
			'defblock' => 68,
			'chunk' => 32,
			'setlist' => 47,
			'sterm' => 17,
			'term' => 50,
			'loop' => 30,
			'item' => 14,
			'statement' => 46,
			'defblockname' => 54,
			'atomdir' => 57,
			'directive' => 73,
			'condition' => 55,
			'macro' => 38,
			'chunks' => 52,
			'view' => 19,
			'try' => 34,
			'atomexpr' => 33,
			'node' => 53,
			'filter' => 40,
			'anonblock' => 42,
			'capture' => 7,
			'expr' => 58,
			'block' => 353,
			'rawperl' => 3,
			'wrapper' => 65,
			'assign' => 10,
			'use' => 13,
			'ident' => 62,
			'perl' => 60,
			'lterm' => 24,
			'switch' => 23
		}
	},
	{#State 347
		DEFAULT => -57
	},
	{#State 348
		DEFAULT => -71
	},
	{#State 349
		DEFAULT => -70
	},
	{#State 350
		ACTIONS => {
			'ELSE' => 299,
			'ELSIF' => 298
		},
		DEFAULT => -50,
		GOTOS => {
			'else' => 354
		}
	},
	{#State 351
		ACTIONS => {
			'CASE' => 308
		},
		DEFAULT => -55,
		GOTOS => {
			'case' => 355
		}
	},
	{#State 352
		DEFAULT => -53
	},
	{#State 353
		DEFAULT => -62
	},
	{#State 354
		DEFAULT => -48
	},
	{#State 355
		DEFAULT => -52
	}
];


#========================================================================
# Rules
#========================================================================

$RULES = [
	[#Rule 0
		 '$start', 2, undef
	],
	[#Rule 1
		 'template', 1,
sub
#line 64 "Parser.yp"
{ $factory->template($_[1])           }
	],
	[#Rule 2
		 'block', 1,
sub
#line 67 "Parser.yp"
{ $factory->block($_[1])              }
	],
	[#Rule 3
		 'block', 0,
sub
#line 68 "Parser.yp"
{ $factory->block()                   }
	],
	[#Rule 4
		 'chunks', 2,
sub
#line 71 "Parser.yp"
{ push(@{$_[1]}, $_[2]) 
                                        if defined $_[2]; $_[1]           }
	],
	[#Rule 5
		 'chunks', 1,
sub
#line 73 "Parser.yp"
{ defined $_[1] ? [ $_[1] ] : [ ]     }
	],
	[#Rule 6
		 'chunk', 1,
sub
#line 76 "Parser.yp"
{ $factory->textblock($_[1])          }
	],
	[#Rule 7
		 'chunk', 2,
sub
#line 77 "Parser.yp"
{ return '' unless $_[1];
                                      $_[0]->location() . $_[1];
                                    }
	],
	[#Rule 8
		 'statement', 1, undef
	],
	[#Rule 9
		 'statement', 1, undef
	],
	[#Rule 10
		 'statement', 1, undef
	],
	[#Rule 11
		 'statement', 1, undef
	],
	[#Rule 12
		 'statement', 1, undef
	],
	[#Rule 13
		 'statement', 1, undef
	],
	[#Rule 14
		 'statement', 1, undef
	],
	[#Rule 15
		 'statement', 1, undef
	],
	[#Rule 16
		 'statement', 1,
sub
#line 90 "Parser.yp"
{ $factory->get($_[1])                }
	],
	[#Rule 17
		 'statement', 2,
sub
#line 91 "Parser.yp"
{ $_[0]->add_metadata($_[2]);         }
	],
	[#Rule 18
		 'statement', 0, undef
	],
	[#Rule 19
		 'directive', 1,
sub
#line 95 "Parser.yp"
{ $factory->set($_[1])                }
	],
	[#Rule 20
		 'directive', 1, undef
	],
	[#Rule 21
		 'directive', 1, undef
	],
	[#Rule 22
		 'directive', 1, undef
	],
	[#Rule 23
		 'directive', 1, undef
	],
	[#Rule 24
		 'directive', 1, undef
	],
	[#Rule 25
		 'directive', 1, undef
	],
	[#Rule 26
		 'atomexpr', 1,
sub
#line 109 "Parser.yp"
{ $factory->get($_[1])                }
	],
	[#Rule 27
		 'atomexpr', 1, undef
	],
	[#Rule 28
		 'atomdir', 2,
sub
#line 113 "Parser.yp"
{ $factory->get($_[2])                }
	],
	[#Rule 29
		 'atomdir', 2,
sub
#line 114 "Parser.yp"
{ $factory->call($_[2])               }
	],
	[#Rule 30
		 'atomdir', 2,
sub
#line 115 "Parser.yp"
{ $factory->set($_[2])                }
	],
	[#Rule 31
		 'atomdir', 2,
sub
#line 116 "Parser.yp"
{ $factory->default($_[2])            }
	],
	[#Rule 32
		 'atomdir', 2,
sub
#line 117 "Parser.yp"
{ $factory->insert($_[2])             }
	],
	[#Rule 33
		 'atomdir', 2,
sub
#line 118 "Parser.yp"
{ $factory->include($_[2])            }
	],
	[#Rule 34
		 'atomdir', 2,
sub
#line 119 "Parser.yp"
{ $factory->process($_[2])            }
	],
	[#Rule 35
		 'atomdir', 2,
sub
#line 120 "Parser.yp"
{ $factory->throw($_[2])              }
	],
	[#Rule 36
		 'atomdir', 1,
sub
#line 121 "Parser.yp"
{ $factory->return()                  }
	],
	[#Rule 37
		 'atomdir', 1,
sub
#line 122 "Parser.yp"
{ $factory->stop()                    }
	],
	[#Rule 38
		 'atomdir', 1,
sub
#line 123 "Parser.yp"
{ "\$output = '';";                   }
	],
	[#Rule 39
		 'atomdir', 1,
sub
#line 124 "Parser.yp"
{ $_[0]->block_label('last ', ';')    }
	],
	[#Rule 40
		 'atomdir', 1,
sub
#line 125 "Parser.yp"
{ $_[0]->in_block('FOR')
                                        ? $factory->next($_[0]->block_label)
                                        : $_[0]->block_label('next ', ';') }
	],
	[#Rule 41
		 'atomdir', 2,
sub
#line 128 "Parser.yp"
{ if ($_[2]->[0]->[0] =~ /^'(on|off)'$/) {
                                          $_[0]->{ DEBUG_DIRS } = ($1 eq 'on');
                                          $factory->debug($_[2]);
                                      }
                                      else {
                                          $_[0]->{ DEBUG_DIRS } ? $factory->debug($_[2]) : '';
                                      }
                                    }
	],
	[#Rule 42
		 'atomdir', 1, undef
	],
	[#Rule 43
		 'atomdir', 1, undef
	],
	[#Rule 44
		 'condition', 6,
sub
#line 141 "Parser.yp"
{ $factory->if(@_[2, 4, 5])           }
	],
	[#Rule 45
		 'condition', 3,
sub
#line 142 "Parser.yp"
{ $factory->if(@_[3, 1])              }
	],
	[#Rule 46
		 'condition', 6,
sub
#line 144 "Parser.yp"
{ $factory->if("!($_[2])", @_[4, 5])  }
	],
	[#Rule 47
		 'condition', 3,
sub
#line 145 "Parser.yp"
{ $factory->if("!($_[3])", $_[1])     }
	],
	[#Rule 48
		 'else', 5,
sub
#line 149 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2, 4] ]);
                                      $_[5];                              }
	],
	[#Rule 49
		 'else', 3,
sub
#line 151 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 50
		 'else', 0,
sub
#line 152 "Parser.yp"
{ [ undef ]                           }
	],
	[#Rule 51
		 'switch', 6,
sub
#line 156 "Parser.yp"
{ $factory->switch(@_[2, 5])          }
	],
	[#Rule 52
		 'case', 5,
sub
#line 160 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2, 4] ]); 
                                      $_[5];                              }
	],
	[#Rule 53
		 'case', 4,
sub
#line 162 "Parser.yp"
{ [ $_[4] ]                           }
	],
	[#Rule 54
		 'case', 3,
sub
#line 163 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 55
		 'case', 0,
sub
#line 164 "Parser.yp"
{ [ undef ]                           }
	],
	[#Rule 56
		 '@1-3', 0,
sub
#line 167 "Parser.yp"
{ $_[0]->enter_block('FOR')           }
	],
	[#Rule 57
		 'loop', 7,
sub
#line 168 "Parser.yp"
{ $factory->foreach(@{$_[2]}, $_[5], @{$_[6]}, $_[0]->leave_block)  }
	],
	[#Rule 58
		 'loop', 3,
sub
#line 169 "Parser.yp"
{ $factory->foreach(@{$_[3]}, $_[1])  }
	],
	[#Rule 59
		 '@2-3', 0,
sub
#line 170 "Parser.yp"
{ $_[0]->enter_block('WHILE')         }
	],
	[#Rule 60
		 'loop', 6,
sub
#line 171 "Parser.yp"
{ $factory->while(@_[2, 5], $_[0]->leave_block) }
	],
	[#Rule 61
		 'loop', 3,
sub
#line 172 "Parser.yp"
{ $factory->while(@_[3, 1]) }
	],
	[#Rule 62
		 'loopelse', 3,
sub
#line 175 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 63
		 'loopelse', 0,
sub
#line 176 "Parser.yp"
{ [ undef ]                           }
	],
	[#Rule 64
		 'loopvar', 4,
sub
#line 179 "Parser.yp"
{ [ @_[1, 3, 4] ]                     }
	],
	[#Rule 65
		 'loopvar', 4,
sub
#line 180 "Parser.yp"
{ [ @_[1, 3, 4] ]                     }
	],
	[#Rule 66
		 'loopvar', 2,
sub
#line 181 "Parser.yp"
{ [ 0, @_[1, 2] ]                     }
	],
	[#Rule 67
		 'wrapper', 5,
sub
#line 185 "Parser.yp"
{ $factory->wrapper(@_[2, 4])         }
	],
	[#Rule 68
		 'wrapper', 3,
sub
#line 187 "Parser.yp"
{ $factory->wrapper(@_[3, 1])         }
	],
	[#Rule 69
		 'try', 5,
sub
#line 191 "Parser.yp"
{ $factory->try(@_[3, 4])             }
	],
	[#Rule 70
		 'final', 5,
sub
#line 195 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2,4] ]);
                                      $_[5];                              }
	],
	[#Rule 71
		 'final', 5,
sub
#line 198 "Parser.yp"
{ unshift(@{$_[5]}, [ undef, $_[4] ]);
                                      $_[5];                              }
	],
	[#Rule 72
		 'final', 4,
sub
#line 201 "Parser.yp"
{ unshift(@{$_[4]}, [ undef, $_[3] ]);
                                      $_[4];                              }
	],
	[#Rule 73
		 'final', 3,
sub
#line 203 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 74
		 'final', 0,
sub
#line 204 "Parser.yp"
{ [ 0 ] }
	],
	[#Rule 75
		 'use', 2,
sub
#line 207 "Parser.yp"
{ $factory->use($_[2])                }
	],
	[#Rule 76
		 '@3-3', 0,
sub
#line 210 "Parser.yp"
{ $_[0]->push_defblock();             }
	],
	[#Rule 77
		 'view', 6,
sub
#line 211 "Parser.yp"
{ $factory->view(@_[2,5], 
                                                     $_[0]->pop_defblock) }
	],
	[#Rule 78
		 '@4-2', 0,
sub
#line 215 "Parser.yp"
{ ${$_[0]->{ INPERL }}++;             }
	],
	[#Rule 79
		 'perl', 5,
sub
#line 216 "Parser.yp"
{ ${$_[0]->{ INPERL }}--;
                                      $_[0]->{ EVAL_PERL } 
                                      ? $factory->perl($_[4])             
                                      : $factory->no_perl();              }
	],
	[#Rule 80
		 '@5-1', 0,
sub
#line 222 "Parser.yp"
{ ${$_[0]->{ INPERL }}++; 
                                      $rawstart = ${$_[0]->{'LINE'}};     }
	],
	[#Rule 81
		 'rawperl', 5,
sub
#line 224 "Parser.yp"
{ ${$_[0]->{ INPERL }}--;
                                      $_[0]->{ EVAL_PERL } 
                                      ? $factory->rawperl($_[4], $rawstart)
                                      : $factory->no_perl();              }
	],
	[#Rule 82
		 'filter', 5,
sub
#line 231 "Parser.yp"
{ $factory->filter(@_[2,4])           }
	],
	[#Rule 83
		 'filter', 3,
sub
#line 233 "Parser.yp"
{ $factory->filter(@_[3,1])           }
	],
	[#Rule 84
		 'defblock', 5,
sub
#line 238 "Parser.yp"
{ my $name = join('/', @{ $_[0]->{ DEFBLOCKS } });
                                      pop(@{ $_[0]->{ DEFBLOCKS } });
                                      $_[0]->define_block($name, $_[4]); 
                                      undef
                                    }
	],
	[#Rule 85
		 'defblockname', 2,
sub
#line 245 "Parser.yp"
{ push(@{ $_[0]->{ DEFBLOCKS } }, $_[2]);
                                      $_[2];
                                    }
	],
	[#Rule 86
		 'blockname', 1, undef
	],
	[#Rule 87
		 'blockname', 1,
sub
#line 251 "Parser.yp"
{ $_[1] =~ s/^'(.*)'$/$1/; $_[1]      }
	],
	[#Rule 88
		 'blockargs', 1, undef
	],
	[#Rule 89
		 'blockargs', 0, undef
	],
	[#Rule 90
		 'anonblock', 5,
sub
#line 259 "Parser.yp"
{ local $" = ', ';
                                      print STDERR "experimental block args: [@{ $_[2] }]\n"
                                          if $_[2];
                                      $factory->anon_block($_[4])         }
	],
	[#Rule 91
		 'capture', 3,
sub
#line 265 "Parser.yp"
{ $factory->capture(@_[1, 3])         }
	],
	[#Rule 92
		 'macro', 6,
sub
#line 269 "Parser.yp"
{ $factory->macro(@_[2, 6, 4])        }
	],
	[#Rule 93
		 'macro', 3,
sub
#line 270 "Parser.yp"
{ $factory->macro(@_[2, 3])           }
	],
	[#Rule 94
		 'mdir', 1, undef
	],
	[#Rule 95
		 'mdir', 4,
sub
#line 274 "Parser.yp"
{ $_[3]                               }
	],
	[#Rule 96
		 'margs', 2,
sub
#line 277 "Parser.yp"
{ push(@{$_[1]}, $_[2]); $_[1]        }
	],
	[#Rule 97
		 'margs', 2,
sub
#line 278 "Parser.yp"
{ $_[1]                               }
	],
	[#Rule 98
		 'margs', 1,
sub
#line 279 "Parser.yp"
{ [ $_[1] ]                           }
	],
	[#Rule 99
		 'metadata', 2,
sub
#line 282 "Parser.yp"
{ push(@{$_[1]}, @{$_[2]}); $_[1]     }
	],
	[#Rule 100
		 'metadata', 2, undef
	],
	[#Rule 101
		 'metadata', 1, undef
	],
	[#Rule 102
		 'meta', 3,
sub
#line 287 "Parser.yp"
{ for ($_[3]) { s/^'//; s/'$//; 
                                                       s/\\'/'/g  }; 
                                         [ @_[1,3] ] }
	],
	[#Rule 103
		 'meta', 5,
sub
#line 290 "Parser.yp"
{ [ @_[1,4] ] }
	],
	[#Rule 104
		 'meta', 3,
sub
#line 291 "Parser.yp"
{ [ @_[1,3] ] }
	],
	[#Rule 105
		 'term', 1, undef
	],
	[#Rule 106
		 'term', 1, undef
	],
	[#Rule 107
		 'lterm', 3,
sub
#line 303 "Parser.yp"
{ "[ $_[2] ]"                         }
	],
	[#Rule 108
		 'lterm', 3,
sub
#line 304 "Parser.yp"
{ "[ $_[2] ]"                         }
	],
	[#Rule 109
		 'lterm', 2,
sub
#line 305 "Parser.yp"
{ "[ ]"                               }
	],
	[#Rule 110
		 'lterm', 3,
sub
#line 306 "Parser.yp"
{ "{ $_[2]  }"                        }
	],
	[#Rule 111
		 'sterm', 1,
sub
#line 309 "Parser.yp"
{ $factory->ident($_[1])              }
	],
	[#Rule 112
		 'sterm', 2,
sub
#line 310 "Parser.yp"
{ $factory->identref($_[2])           }
	],
	[#Rule 113
		 'sterm', 3,
sub
#line 311 "Parser.yp"
{ $factory->quoted($_[2])             }
	],
	[#Rule 114
		 'sterm', 1, undef
	],
	[#Rule 115
		 'sterm', 1, undef
	],
	[#Rule 116
		 'list', 2,
sub
#line 316 "Parser.yp"
{ "$_[1], $_[2]"                      }
	],
	[#Rule 117
		 'list', 2, undef
	],
	[#Rule 118
		 'list', 1, undef
	],
	[#Rule 119
		 'range', 3,
sub
#line 321 "Parser.yp"
{ $_[1] . '..' . $_[3]                }
	],
	[#Rule 120
		 'hash', 1, undef
	],
	[#Rule 121
		 'hash', 0,
sub
#line 326 "Parser.yp"
{ "" }
	],
	[#Rule 122
		 'params', 2,
sub
#line 329 "Parser.yp"
{ "$_[1], $_[2]"                      }
	],
	[#Rule 123
		 'params', 2, undef
	],
	[#Rule 124
		 'params', 1, undef
	],
	[#Rule 125
		 'param', 3,
sub
#line 334 "Parser.yp"
{ "$_[1] => $_[3]"                    }
	],
	[#Rule 126
		 'param', 3,
sub
#line 335 "Parser.yp"
{ "$_[1] => $_[3]"                    }
	],
	[#Rule 127
		 'ident', 3,
sub
#line 338 "Parser.yp"
{ push(@{$_[1]}, @{$_[3]}); $_[1]     }
	],
	[#Rule 128
		 'ident', 3,
sub
#line 339 "Parser.yp"
{ push(@{$_[1]}, 
                                           map {($_, 0)} split(/\./, $_[3]));
                                      $_[1];                              }
	],
	[#Rule 129
		 'ident', 1, undef
	],
	[#Rule 130
		 'node', 1,
sub
#line 345 "Parser.yp"
{ [ $_[1], 0 ]                        }
	],
	[#Rule 131
		 'node', 4,
sub
#line 346 "Parser.yp"
{ [ $_[1], $factory->args($_[3]) ]    }
	],
	[#Rule 132
		 'item', 1,
sub
#line 349 "Parser.yp"
{ "'$_[1]'"                           }
	],
	[#Rule 133
		 'item', 3,
sub
#line 350 "Parser.yp"
{ $_[2]                               }
	],
	[#Rule 134
		 'item', 2,
sub
#line 351 "Parser.yp"
{ $_[0]->{ V1DOLLAR }
                                       ? "'$_[2]'" 
                                       : $factory->ident(["'$_[2]'", 0])  }
	],
	[#Rule 135
		 'expr', 3,
sub
#line 356 "Parser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 136
		 'expr', 3,
sub
#line 357 "Parser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 137
		 'expr', 3,
sub
#line 358 "Parser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 138
		 'expr', 3,
sub
#line 359 "Parser.yp"
{ "int($_[1] / $_[3])"                }
	],
	[#Rule 139
		 'expr', 3,
sub
#line 360 "Parser.yp"
{ "$_[1] % $_[3]"                     }
	],
	[#Rule 140
		 'expr', 3,
sub
#line 361 "Parser.yp"
{ "$_[1] $CMPOP{ $_[2] } $_[3]"       }
	],
	[#Rule 141
		 'expr', 3,
sub
#line 362 "Parser.yp"
{ "$_[1]  . $_[3]"                    }
	],
	[#Rule 142
		 'expr', 3,
sub
#line 363 "Parser.yp"
{ "$_[1] && $_[3]"                    }
	],
	[#Rule 143
		 'expr', 3,
sub
#line 364 "Parser.yp"
{ "$_[1] || $_[3]"                    }
	],
	[#Rule 144
		 'expr', 2,
sub
#line 365 "Parser.yp"
{ "! $_[2]"                           }
	],
	[#Rule 145
		 'expr', 5,
sub
#line 366 "Parser.yp"
{ "$_[1] ? $_[3] : $_[5]"             }
	],
	[#Rule 146
		 'expr', 3,
sub
#line 367 "Parser.yp"
{ $factory->assign(@{$_[2]})          }
	],
	[#Rule 147
		 'expr', 3,
sub
#line 368 "Parser.yp"
{ "($_[2])"                           }
	],
	[#Rule 148
		 'expr', 1, undef
	],
	[#Rule 149
		 'setlist', 2,
sub
#line 372 "Parser.yp"
{ push(@{$_[1]}, @{$_[2]}); $_[1]     }
	],
	[#Rule 150
		 'setlist', 2, undef
	],
	[#Rule 151
		 'setlist', 1, undef
	],
	[#Rule 152
		 'assign', 3,
sub
#line 378 "Parser.yp"
{ [ $_[1], $_[3] ]                    }
	],
	[#Rule 153
		 'assign', 3,
sub
#line 379 "Parser.yp"
{ [ @_[1,3] ]                         }
	],
	[#Rule 154
		 'args', 2,
sub
#line 386 "Parser.yp"
{ push(@{$_[1]}, $_[2]); $_[1]        }
	],
	[#Rule 155
		 'args', 2,
sub
#line 387 "Parser.yp"
{ push(@{$_[1]->[0]}, $_[2]); $_[1]   }
	],
	[#Rule 156
		 'args', 4,
sub
#line 388 "Parser.yp"
{ push(@{$_[1]->[0]}, "'', " . 
                                      $factory->assign(@_[2,4])); $_[1]  }
	],
	[#Rule 157
		 'args', 2,
sub
#line 390 "Parser.yp"
{ $_[1]                               }
	],
	[#Rule 158
		 'args', 0,
sub
#line 391 "Parser.yp"
{ [ [ ] ]                             }
	],
	[#Rule 159
		 'lnameargs', 3,
sub
#line 401 "Parser.yp"
{ push(@{$_[3]}, $_[1]); $_[3]        }
	],
	[#Rule 160
		 'lnameargs', 1, undef
	],
	[#Rule 161
		 'lvalue', 1, undef
	],
	[#Rule 162
		 'lvalue', 3,
sub
#line 406 "Parser.yp"
{ $factory->quoted($_[2])             }
	],
	[#Rule 163
		 'lvalue', 1, undef
	],
	[#Rule 164
		 'nameargs', 3,
sub
#line 410 "Parser.yp"
{ [ [$factory->ident($_[2])], $_[3] ]   }
	],
	[#Rule 165
		 'nameargs', 2,
sub
#line 411 "Parser.yp"
{ [ @_[1,2] ] }
	],
	[#Rule 166
		 'nameargs', 4,
sub
#line 412 "Parser.yp"
{ [ @_[1,3] ] }
	],
	[#Rule 167
		 'names', 3,
sub
#line 415 "Parser.yp"
{ push(@{$_[1]}, $_[3]); $_[1] }
	],
	[#Rule 168
		 'names', 1,
sub
#line 416 "Parser.yp"
{ [ $_[1] ]                    }
	],
	[#Rule 169
		 'name', 3,
sub
#line 419 "Parser.yp"
{ $factory->quoted($_[2])  }
	],
	[#Rule 170
		 'name', 1,
sub
#line 420 "Parser.yp"
{ "'$_[1]'" }
	],
	[#Rule 171
		 'name', 1, undef
	],
	[#Rule 172
		 'filename', 3,
sub
#line 424 "Parser.yp"
{ "$_[1].$_[3]" }
	],
	[#Rule 173
		 'filename', 1, undef
	],
	[#Rule 174
		 'filepart', 1, undef
	],
	[#Rule 175
		 'filepart', 1, undef
	],
	[#Rule 176
		 'filepart', 1, undef
	],
	[#Rule 177
		 'quoted', 2,
sub
#line 438 "Parser.yp"
{ push(@{$_[1]}, $_[2]) 
                                          if defined $_[2]; $_[1]         }
	],
	[#Rule 178
		 'quoted', 0,
sub
#line 440 "Parser.yp"
{ [ ]                                 }
	],
	[#Rule 179
		 'quotable', 1,
sub
#line 443 "Parser.yp"
{ $factory->ident($_[1])              }
	],
	[#Rule 180
		 'quotable', 1,
sub
#line 444 "Parser.yp"
{ $factory->text($_[1])               }
	],
	[#Rule 181
		 'quotable', 1,
sub
#line 445 "Parser.yp"
{ undef                               }
	]
];



1;

__END__

=head1 NAME

Template::Grammar - Parser state/rule tables for the TT grammar

=head1 SYNOPSIS

    # no user serviceable parts inside

=head1 DESCRIPTION

This module defines the state and rule tables that the L<Template::Parser>
module uses to parse templates.  It is generated from a YACC-like grammar
using the C<Parse::Yapp> module.  The F<parser> sub-directory of the
Template Toolkit source distribution contains the grammar and other
files required to generate this module.

But you don't need to worry about any of that unless you're planning to
modify the Template Toolkit language.

=head1 AUTHOR

Andy Wardley E<lt>abw@wardley.orgE<gt>

L<http://wardley.org/>

=head1 COPYRIGHT

Copyright (C) 1996-2014 Andy Wardley.  All Rights Reserved.

This module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.

=head1 SEE ALSO

L<Template::Parser>

=cut

# Local Variables:
# mode: perl
# perl-indent-level: 4
# indent-tabs-mode: nil
# End:
#
# vim: expandtab shiftwidth=4:
